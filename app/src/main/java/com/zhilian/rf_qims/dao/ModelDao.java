package com.zhilian.rf_qims.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.zhilian.rf_qims.entity.Model;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "MODEL".
*/
public class ModelDao extends AbstractDao<Model, Long> {

    public static final String TABLENAME = "MODEL";

    /**
     * Properties of entity Model.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property U_steel_thickness = new Property(1, double.class, "u_steel_thickness", false, "U_STEEL_THICKNESS");
        public final static Property Hanging_plate_height = new Property(2, double.class, "hanging_plate_height", false, "HANGING_PLATE_HEIGHT");
        public final static Property Embedded_plate_height = new Property(3, double.class, "embedded_plate_height", false, "EMBEDDED_PLATE_HEIGHT");
        public final static Property Hanging_plate_4 = new Property(4, double.class, "hanging_plate_4", false, "HANGING_PLATE_4");
        public final static Property Swing_plate_diagonal2 = new Property(5, double.class, "swing_plate_diagonal2", false, "SWING_PLATE_DIAGONAL2");
        public final static Property Door_leaf_thickness = new Property(6, double.class, "door_leaf_thickness", false, "DOOR_LEAF_THICKNESS");
        public final static Property Swing_plate_diagonal1 = new Property(7, double.class, "swing_plate_diagonal1", false, "SWING_PLATE_DIAGONAL1");
        public final static Property Hanging_plate_2 = new Property(8, double.class, "hanging_plate_2", false, "HANGING_PLATE_2");
        public final static Property Hanging_plate_3 = new Property(9, double.class, "hanging_plate_3", false, "HANGING_PLATE_3");
        public final static Property Swing_plate_diagonal3 = new Property(10, double.class, "swing_plate_diagonal3", false, "SWING_PLATE_DIAGONAL3");
        public final static Property Door_frame_width_height = new Property(11, double.class, "door_frame_width_height", false, "DOOR_FRAME_WIDTH_HEIGHT");
        public final static Property Hanging_plate_thickness = new Property(12, double.class, "hanging_plate_thickness", false, "HANGING_PLATE_THICKNESS");
        public final static Property Hanging_plate_1 = new Property(13, double.class, "hanging_plate_1", false, "HANGING_PLATE_1");
        public final static Property Steel_angle_width = new Property(14, double.class, "steel_angle_width", false, "STEEL_ANGLE_WIDTH");
        public final static Property Indentation_width = new Property(15, double.class, "indentation_width", false, "INDENTATION_WIDTH");
        public final static Property Status = new Property(16, String.class, "status", false, "STATUS");
        public final static Property Year = new Property(17, String.class, "year", false, "YEAR");
        public final static Property Model_number = new Property(18, String.class, "model_number", false, "MODEL_NUMBER");
        public final static Property Hanging_plate_thickness2 = new Property(19, double.class, "hanging_plate_thickness2", false, "HANGING_PLATE_THICKNESS2");
        public final static Property Hingepage_hole_diameter = new Property(20, double.class, "hingepage_hole_diameter", false, "HINGEPAGE_HOLE_DIAMETER");
        public final static Property U_steel_width = new Property(21, double.class, "u_steel_width", false, "U_STEEL_WIDTH");
        public final static Property Hanging_plate_width = new Property(22, double.class, "hanging_plate_width", false, "HANGING_PLATE_WIDTH");
        public final static Property U_steel_height = new Property(23, double.class, "u_steel_height", false, "U_STEEL_HEIGHT");
        public final static Property Steel_angle_height = new Property(24, double.class, "steel_angle_height", false, "STEEL_ANGLE_HEIGHT");
        public final static Property Memo = new Property(25, double.class, "memo", false, "MEMO");
        public final static Property Door_leaf_width = new Property(26, double.class, "door_leaf_width", false, "DOOR_LEAF_WIDTH");
        public final static Property Door_frame_diagonal = new Property(27, double.class, "door_frame_diagonal", false, "DOOR_FRAME_DIAGONAL");
        public final static Property Door_leaf_diagonal = new Property(28, double.class, "door_leaf_diagonal", false, "DOOR_LEAF_DIAGONAL");
        public final static Property Door_leaf_width_height = new Property(29, double.class, "door_leaf_width_height", false, "DOOR_LEAF_WIDTH_HEIGHT");
        public final static Property Doorleafbaseventheight = new Property(30, double.class, "doorleafbaseventheight", false, "DOORLEAFBASEVENTHEIGHT");
        public final static Property Door_frame_width = new Property(31, double.class, "door_frame_width", false, "DOOR_FRAME_WIDTH");
        public final static Property Weld_thickness = new Property(32, double.class, "weld_thickness", false, "WELD_THICKNESS");
        public final static Property Plate_thickness = new Property(33, double.class, "plate_thickness", false, "PLATE_THICKNESS");
        public final static Property Name = new Property(34, String.class, "name", false, "NAME");
        public final static Property Atresia_shaft_diameter = new Property(35, double.class, "atresia_shaft_diameter", false, "ATRESIA_SHAFT_DIAMETER");
        public final static Property Hingepage_shaft_diameter = new Property(36, double.class, "hingepage_shaft_diameter", false, "HINGEPAGE_SHAFT_DIAMETER");
        public final static Property Hanging_plate_height3 = new Property(37, double.class, "hanging_plate_height3", false, "HANGING_PLATE_HEIGHT3");
        public final static Property Doorleafbaseventwidth = new Property(38, double.class, "doorleafbaseventwidth", false, "DOORLEAFBASEVENTWIDTH");
        public final static Property Door_frame_height = new Property(39, double.class, "door_frame_height", false, "DOOR_FRAME_HEIGHT");
        public final static Property Atresia_hole_diameter = new Property(40, double.class, "atresia_hole_diameter", false, "ATRESIA_HOLE_DIAMETER");
        public final static Property Hanging_plate_height2 = new Property(41, double.class, "hanging_plate_height2", false, "HANGING_PLATE_HEIGHT2");
        public final static Property Door_leaf_design_acreage = new Property(42, double.class, "door_leaf_design_acreage", false, "DOOR_LEAF_DESIGN_ACREAGE");
        public final static Property Door_leaf_height = new Property(43, double.class, "door_leaf_height", false, "DOOR_LEAF_HEIGHT");
        public final static Property Steel_angle_thickness = new Property(44, double.class, "steel_angle_thickness", false, "STEEL_ANGLE_THICKNESS");
    }


    public ModelDao(DaoConfig config) {
        super(config);
    }
    
    public ModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"MODEL\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"U_STEEL_THICKNESS\" REAL NOT NULL ," + // 1: u_steel_thickness
                "\"HANGING_PLATE_HEIGHT\" REAL NOT NULL ," + // 2: hanging_plate_height
                "\"EMBEDDED_PLATE_HEIGHT\" REAL NOT NULL ," + // 3: embedded_plate_height
                "\"HANGING_PLATE_4\" REAL NOT NULL ," + // 4: hanging_plate_4
                "\"SWING_PLATE_DIAGONAL2\" REAL NOT NULL ," + // 5: swing_plate_diagonal2
                "\"DOOR_LEAF_THICKNESS\" REAL NOT NULL ," + // 6: door_leaf_thickness
                "\"SWING_PLATE_DIAGONAL1\" REAL NOT NULL ," + // 7: swing_plate_diagonal1
                "\"HANGING_PLATE_2\" REAL NOT NULL ," + // 8: hanging_plate_2
                "\"HANGING_PLATE_3\" REAL NOT NULL ," + // 9: hanging_plate_3
                "\"SWING_PLATE_DIAGONAL3\" REAL NOT NULL ," + // 10: swing_plate_diagonal3
                "\"DOOR_FRAME_WIDTH_HEIGHT\" REAL NOT NULL ," + // 11: door_frame_width_height
                "\"HANGING_PLATE_THICKNESS\" REAL NOT NULL ," + // 12: hanging_plate_thickness
                "\"HANGING_PLATE_1\" REAL NOT NULL ," + // 13: hanging_plate_1
                "\"STEEL_ANGLE_WIDTH\" REAL NOT NULL ," + // 14: steel_angle_width
                "\"INDENTATION_WIDTH\" REAL NOT NULL ," + // 15: indentation_width
                "\"STATUS\" TEXT," + // 16: status
                "\"YEAR\" TEXT," + // 17: year
                "\"MODEL_NUMBER\" TEXT," + // 18: model_number
                "\"HANGING_PLATE_THICKNESS2\" REAL NOT NULL ," + // 19: hanging_plate_thickness2
                "\"HINGEPAGE_HOLE_DIAMETER\" REAL NOT NULL ," + // 20: hingepage_hole_diameter
                "\"U_STEEL_WIDTH\" REAL NOT NULL ," + // 21: u_steel_width
                "\"HANGING_PLATE_WIDTH\" REAL NOT NULL ," + // 22: hanging_plate_width
                "\"U_STEEL_HEIGHT\" REAL NOT NULL ," + // 23: u_steel_height
                "\"STEEL_ANGLE_HEIGHT\" REAL NOT NULL ," + // 24: steel_angle_height
                "\"MEMO\" REAL NOT NULL ," + // 25: memo
                "\"DOOR_LEAF_WIDTH\" REAL NOT NULL ," + // 26: door_leaf_width
                "\"DOOR_FRAME_DIAGONAL\" REAL NOT NULL ," + // 27: door_frame_diagonal
                "\"DOOR_LEAF_DIAGONAL\" REAL NOT NULL ," + // 28: door_leaf_diagonal
                "\"DOOR_LEAF_WIDTH_HEIGHT\" REAL NOT NULL ," + // 29: door_leaf_width_height
                "\"DOORLEAFBASEVENTHEIGHT\" REAL NOT NULL ," + // 30: doorleafbaseventheight
                "\"DOOR_FRAME_WIDTH\" REAL NOT NULL ," + // 31: door_frame_width
                "\"WELD_THICKNESS\" REAL NOT NULL ," + // 32: weld_thickness
                "\"PLATE_THICKNESS\" REAL NOT NULL ," + // 33: plate_thickness
                "\"NAME\" TEXT," + // 34: name
                "\"ATRESIA_SHAFT_DIAMETER\" REAL NOT NULL ," + // 35: atresia_shaft_diameter
                "\"HINGEPAGE_SHAFT_DIAMETER\" REAL NOT NULL ," + // 36: hingepage_shaft_diameter
                "\"HANGING_PLATE_HEIGHT3\" REAL NOT NULL ," + // 37: hanging_plate_height3
                "\"DOORLEAFBASEVENTWIDTH\" REAL NOT NULL ," + // 38: doorleafbaseventwidth
                "\"DOOR_FRAME_HEIGHT\" REAL NOT NULL ," + // 39: door_frame_height
                "\"ATRESIA_HOLE_DIAMETER\" REAL NOT NULL ," + // 40: atresia_hole_diameter
                "\"HANGING_PLATE_HEIGHT2\" REAL NOT NULL ," + // 41: hanging_plate_height2
                "\"DOOR_LEAF_DESIGN_ACREAGE\" REAL NOT NULL ," + // 42: door_leaf_design_acreage
                "\"DOOR_LEAF_HEIGHT\" REAL NOT NULL ," + // 43: door_leaf_height
                "\"STEEL_ANGLE_THICKNESS\" REAL NOT NULL );"); // 44: steel_angle_thickness
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"MODEL\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Model entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindDouble(2, entity.getU_steel_thickness());
        stmt.bindDouble(3, entity.getHanging_plate_height());
        stmt.bindDouble(4, entity.getEmbedded_plate_height());
        stmt.bindDouble(5, entity.getHanging_plate_4());
        stmt.bindDouble(6, entity.getSwing_plate_diagonal2());
        stmt.bindDouble(7, entity.getDoor_leaf_thickness());
        stmt.bindDouble(8, entity.getSwing_plate_diagonal1());
        stmt.bindDouble(9, entity.getHanging_plate_2());
        stmt.bindDouble(10, entity.getHanging_plate_3());
        stmt.bindDouble(11, entity.getSwing_plate_diagonal3());
        stmt.bindDouble(12, entity.getDoor_frame_width_height());
        stmt.bindDouble(13, entity.getHanging_plate_thickness());
        stmt.bindDouble(14, entity.getHanging_plate_1());
        stmt.bindDouble(15, entity.getSteel_angle_width());
        stmt.bindDouble(16, entity.getIndentation_width());
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(17, status);
        }
 
        String year = entity.getYear();
        if (year != null) {
            stmt.bindString(18, year);
        }
 
        String model_number = entity.getModel_number();
        if (model_number != null) {
            stmt.bindString(19, model_number);
        }
        stmt.bindDouble(20, entity.getHanging_plate_thickness2());
        stmt.bindDouble(21, entity.getHingepage_hole_diameter());
        stmt.bindDouble(22, entity.getU_steel_width());
        stmt.bindDouble(23, entity.getHanging_plate_width());
        stmt.bindDouble(24, entity.getU_steel_height());
        stmt.bindDouble(25, entity.getSteel_angle_height());
        stmt.bindDouble(26, entity.getMemo());
        stmt.bindDouble(27, entity.getDoor_leaf_width());
        stmt.bindDouble(28, entity.getDoor_frame_diagonal());
        stmt.bindDouble(29, entity.getDoor_leaf_diagonal());
        stmt.bindDouble(30, entity.getDoor_leaf_width_height());
        stmt.bindDouble(31, entity.getDoorleafbaseventheight());
        stmt.bindDouble(32, entity.getDoor_frame_width());
        stmt.bindDouble(33, entity.getWeld_thickness());
        stmt.bindDouble(34, entity.getPlate_thickness());
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(35, name);
        }
        stmt.bindDouble(36, entity.getAtresia_shaft_diameter());
        stmt.bindDouble(37, entity.getHingepage_shaft_diameter());
        stmt.bindDouble(38, entity.getHanging_plate_height3());
        stmt.bindDouble(39, entity.getDoorleafbaseventwidth());
        stmt.bindDouble(40, entity.getDoor_frame_height());
        stmt.bindDouble(41, entity.getAtresia_hole_diameter());
        stmt.bindDouble(42, entity.getHanging_plate_height2());
        stmt.bindDouble(43, entity.getDoor_leaf_design_acreage());
        stmt.bindDouble(44, entity.getDoor_leaf_height());
        stmt.bindDouble(45, entity.getSteel_angle_thickness());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Model entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindDouble(2, entity.getU_steel_thickness());
        stmt.bindDouble(3, entity.getHanging_plate_height());
        stmt.bindDouble(4, entity.getEmbedded_plate_height());
        stmt.bindDouble(5, entity.getHanging_plate_4());
        stmt.bindDouble(6, entity.getSwing_plate_diagonal2());
        stmt.bindDouble(7, entity.getDoor_leaf_thickness());
        stmt.bindDouble(8, entity.getSwing_plate_diagonal1());
        stmt.bindDouble(9, entity.getHanging_plate_2());
        stmt.bindDouble(10, entity.getHanging_plate_3());
        stmt.bindDouble(11, entity.getSwing_plate_diagonal3());
        stmt.bindDouble(12, entity.getDoor_frame_width_height());
        stmt.bindDouble(13, entity.getHanging_plate_thickness());
        stmt.bindDouble(14, entity.getHanging_plate_1());
        stmt.bindDouble(15, entity.getSteel_angle_width());
        stmt.bindDouble(16, entity.getIndentation_width());
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(17, status);
        }
 
        String year = entity.getYear();
        if (year != null) {
            stmt.bindString(18, year);
        }
 
        String model_number = entity.getModel_number();
        if (model_number != null) {
            stmt.bindString(19, model_number);
        }
        stmt.bindDouble(20, entity.getHanging_plate_thickness2());
        stmt.bindDouble(21, entity.getHingepage_hole_diameter());
        stmt.bindDouble(22, entity.getU_steel_width());
        stmt.bindDouble(23, entity.getHanging_plate_width());
        stmt.bindDouble(24, entity.getU_steel_height());
        stmt.bindDouble(25, entity.getSteel_angle_height());
        stmt.bindDouble(26, entity.getMemo());
        stmt.bindDouble(27, entity.getDoor_leaf_width());
        stmt.bindDouble(28, entity.getDoor_frame_diagonal());
        stmt.bindDouble(29, entity.getDoor_leaf_diagonal());
        stmt.bindDouble(30, entity.getDoor_leaf_width_height());
        stmt.bindDouble(31, entity.getDoorleafbaseventheight());
        stmt.bindDouble(32, entity.getDoor_frame_width());
        stmt.bindDouble(33, entity.getWeld_thickness());
        stmt.bindDouble(34, entity.getPlate_thickness());
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(35, name);
        }
        stmt.bindDouble(36, entity.getAtresia_shaft_diameter());
        stmt.bindDouble(37, entity.getHingepage_shaft_diameter());
        stmt.bindDouble(38, entity.getHanging_plate_height3());
        stmt.bindDouble(39, entity.getDoorleafbaseventwidth());
        stmt.bindDouble(40, entity.getDoor_frame_height());
        stmt.bindDouble(41, entity.getAtresia_hole_diameter());
        stmt.bindDouble(42, entity.getHanging_plate_height2());
        stmt.bindDouble(43, entity.getDoor_leaf_design_acreage());
        stmt.bindDouble(44, entity.getDoor_leaf_height());
        stmt.bindDouble(45, entity.getSteel_angle_thickness());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Model readEntity(Cursor cursor, int offset) {
        Model entity = new Model( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getDouble(offset + 1), // u_steel_thickness
            cursor.getDouble(offset + 2), // hanging_plate_height
            cursor.getDouble(offset + 3), // embedded_plate_height
            cursor.getDouble(offset + 4), // hanging_plate_4
            cursor.getDouble(offset + 5), // swing_plate_diagonal2
            cursor.getDouble(offset + 6), // door_leaf_thickness
            cursor.getDouble(offset + 7), // swing_plate_diagonal1
            cursor.getDouble(offset + 8), // hanging_plate_2
            cursor.getDouble(offset + 9), // hanging_plate_3
            cursor.getDouble(offset + 10), // swing_plate_diagonal3
            cursor.getDouble(offset + 11), // door_frame_width_height
            cursor.getDouble(offset + 12), // hanging_plate_thickness
            cursor.getDouble(offset + 13), // hanging_plate_1
            cursor.getDouble(offset + 14), // steel_angle_width
            cursor.getDouble(offset + 15), // indentation_width
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // status
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // year
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // model_number
            cursor.getDouble(offset + 19), // hanging_plate_thickness2
            cursor.getDouble(offset + 20), // hingepage_hole_diameter
            cursor.getDouble(offset + 21), // u_steel_width
            cursor.getDouble(offset + 22), // hanging_plate_width
            cursor.getDouble(offset + 23), // u_steel_height
            cursor.getDouble(offset + 24), // steel_angle_height
            cursor.getDouble(offset + 25), // memo
            cursor.getDouble(offset + 26), // door_leaf_width
            cursor.getDouble(offset + 27), // door_frame_diagonal
            cursor.getDouble(offset + 28), // door_leaf_diagonal
            cursor.getDouble(offset + 29), // door_leaf_width_height
            cursor.getDouble(offset + 30), // doorleafbaseventheight
            cursor.getDouble(offset + 31), // door_frame_width
            cursor.getDouble(offset + 32), // weld_thickness
            cursor.getDouble(offset + 33), // plate_thickness
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // name
            cursor.getDouble(offset + 35), // atresia_shaft_diameter
            cursor.getDouble(offset + 36), // hingepage_shaft_diameter
            cursor.getDouble(offset + 37), // hanging_plate_height3
            cursor.getDouble(offset + 38), // doorleafbaseventwidth
            cursor.getDouble(offset + 39), // door_frame_height
            cursor.getDouble(offset + 40), // atresia_hole_diameter
            cursor.getDouble(offset + 41), // hanging_plate_height2
            cursor.getDouble(offset + 42), // door_leaf_design_acreage
            cursor.getDouble(offset + 43), // door_leaf_height
            cursor.getDouble(offset + 44) // steel_angle_thickness
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Model entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setU_steel_thickness(cursor.getDouble(offset + 1));
        entity.setHanging_plate_height(cursor.getDouble(offset + 2));
        entity.setEmbedded_plate_height(cursor.getDouble(offset + 3));
        entity.setHanging_plate_4(cursor.getDouble(offset + 4));
        entity.setSwing_plate_diagonal2(cursor.getDouble(offset + 5));
        entity.setDoor_leaf_thickness(cursor.getDouble(offset + 6));
        entity.setSwing_plate_diagonal1(cursor.getDouble(offset + 7));
        entity.setHanging_plate_2(cursor.getDouble(offset + 8));
        entity.setHanging_plate_3(cursor.getDouble(offset + 9));
        entity.setSwing_plate_diagonal3(cursor.getDouble(offset + 10));
        entity.setDoor_frame_width_height(cursor.getDouble(offset + 11));
        entity.setHanging_plate_thickness(cursor.getDouble(offset + 12));
        entity.setHanging_plate_1(cursor.getDouble(offset + 13));
        entity.setSteel_angle_width(cursor.getDouble(offset + 14));
        entity.setIndentation_width(cursor.getDouble(offset + 15));
        entity.setStatus(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setYear(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setModel_number(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setHanging_plate_thickness2(cursor.getDouble(offset + 19));
        entity.setHingepage_hole_diameter(cursor.getDouble(offset + 20));
        entity.setU_steel_width(cursor.getDouble(offset + 21));
        entity.setHanging_plate_width(cursor.getDouble(offset + 22));
        entity.setU_steel_height(cursor.getDouble(offset + 23));
        entity.setSteel_angle_height(cursor.getDouble(offset + 24));
        entity.setMemo(cursor.getDouble(offset + 25));
        entity.setDoor_leaf_width(cursor.getDouble(offset + 26));
        entity.setDoor_frame_diagonal(cursor.getDouble(offset + 27));
        entity.setDoor_leaf_diagonal(cursor.getDouble(offset + 28));
        entity.setDoor_leaf_width_height(cursor.getDouble(offset + 29));
        entity.setDoorleafbaseventheight(cursor.getDouble(offset + 30));
        entity.setDoor_frame_width(cursor.getDouble(offset + 31));
        entity.setWeld_thickness(cursor.getDouble(offset + 32));
        entity.setPlate_thickness(cursor.getDouble(offset + 33));
        entity.setName(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setAtresia_shaft_diameter(cursor.getDouble(offset + 35));
        entity.setHingepage_shaft_diameter(cursor.getDouble(offset + 36));
        entity.setHanging_plate_height3(cursor.getDouble(offset + 37));
        entity.setDoorleafbaseventwidth(cursor.getDouble(offset + 38));
        entity.setDoor_frame_height(cursor.getDouble(offset + 39));
        entity.setAtresia_hole_diameter(cursor.getDouble(offset + 40));
        entity.setHanging_plate_height2(cursor.getDouble(offset + 41));
        entity.setDoor_leaf_design_acreage(cursor.getDouble(offset + 42));
        entity.setDoor_leaf_height(cursor.getDouble(offset + 43));
        entity.setSteel_angle_thickness(cursor.getDouble(offset + 44));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Model entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Model entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Model entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
