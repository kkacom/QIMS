package com.zhilian.rf_qims.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.zhilian.rf_qims.entity.SampleCheck;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SAMPLE_CHECK".
*/
public class SampleCheckDao extends AbstractDao<SampleCheck, Long> {

    public static final String TABLENAME = "SAMPLE_CHECK";

    /**
     * Properties of entity SampleCheck.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Status = new Property(1, int.class, "status", false, "STATUS");
        public final static Property Pid = new Property(2, long.class, "pid", false, "PID");
        public final static Property Door_frame_height1 = new Property(3, String.class, "door_frame_height1", false, "DOOR_FRAME_HEIGHT1");
        public final static Property Door_frame_width1 = new Property(4, String.class, "door_frame_width1", false, "DOOR_FRAME_WIDTH1");
        public final static Property Door_frame_diagonal = new Property(5, String.class, "door_frame_diagonal", false, "DOOR_FRAME_DIAGONAL");
        public final static Property Door_frame_diagonal_bottom_fulcrum = new Property(6, String.class, "door_frame_diagonal_bottom_fulcrum", false, "DOOR_FRAME_DIAGONAL_BOTTOM_FULCRUM");
        public final static Property Door_frame_diagonal_bottom_fulcrum_difference = new Property(7, String.class, "door_frame_diagonal_bottom_fulcrum_difference", false, "DOOR_FRAME_DIAGONAL_BOTTOM_FULCRUM_DIFFERENCE");
        public final static Property Door_frame_diagonal_top_fulcrum = new Property(8, String.class, "door_frame_diagonal_top_fulcrum", false, "DOOR_FRAME_DIAGONAL_TOP_FULCRUM");
        public final static Property Door_frame_diagonal_top_fulcrum_difference = new Property(9, String.class, "door_frame_diagonal_top_fulcrum_difference", false, "DOOR_FRAME_DIAGONAL_TOP_FULCRUM_DIFFERENCE");
        public final static Property Door_leaf_height1 = new Property(10, String.class, "door_leaf_height1", false, "DOOR_LEAF_HEIGHT1");
        public final static Property Door_leaf_width1 = new Property(11, String.class, "door_leaf_width1", false, "DOOR_LEAF_WIDTH1");
        public final static Property Door_leaf_diagonal = new Property(12, String.class, "door_leaf_diagonal", false, "DOOR_LEAF_DIAGONAL");
        public final static Property Door_leaf_thickess = new Property(13, String.class, "door_leaf_thickess", false, "DOOR_LEAF_THICKESS");
        public final static Property Embedded_plate_height1 = new Property(14, String.class, "embedded_plate_height1", false, "EMBEDDED_PLATE_HEIGHT1");
        public final static Property Hanging_plate_height1 = new Property(15, String.class, "hanging_plate_height1", false, "HANGING_PLATE_HEIGHT1");
        public final static Property Hanging_plate_height_center1 = new Property(16, String.class, "hanging_plate_height_center1", false, "HANGING_PLATE_HEIGHT_CENTER1");
        public final static Property Hanging_plate_height_bottom1 = new Property(17, String.class, "hanging_plate_height_bottom1", false, "HANGING_PLATE_HEIGHT_BOTTOM1");
        public final static Property Hanging_plate_width1 = new Property(18, String.class, "hanging_plate_width1", false, "HANGING_PLATE_WIDTH1");
        public final static Property Hanging_plate_width_center1 = new Property(19, String.class, "hanging_plate_width_center1", false, "HANGING_PLATE_WIDTH_CENTER1");
        public final static Property Hanging_plate_width_bottom1 = new Property(20, String.class, "hanging_plate_width_bottom1", false, "HANGING_PLATE_WIDTH_BOTTOM1");
        public final static Property Swing_plate_diagonal1 = new Property(21, String.class, "swing_plate_diagonal1", false, "SWING_PLATE_DIAGONAL1");
        public final static Property Swing_plate_diagonal2 = new Property(22, String.class, "swing_plate_diagonal2", false, "SWING_PLATE_DIAGONAL2");
        public final static Property Hingepage_shaft_diameter1 = new Property(23, String.class, "hingepage_shaft_diameter1", false, "HINGEPAGE_SHAFT_DIAMETER1");
        public final static Property Hingepage_hole_diameter1 = new Property(24, String.class, "hingepage_hole_diameter1", false, "HINGEPAGE_HOLE_DIAMETER1");
        public final static Property Atresia_shaft_diameter1 = new Property(25, String.class, "atresia_shaft_diameter1", false, "ATRESIA_SHAFT_DIAMETER1");
        public final static Property Atresia_hole_diameter1 = new Property(26, String.class, "atresia_hole_diameter1", false, "ATRESIA_HOLE_DIAMETER1");
        public final static Property Door_frame_surface1 = new Property(27, String.class, "door_frame_surface1", false, "DOOR_FRAME_SURFACE1");
        public final static Property Door_leaf_surface1 = new Property(28, String.class, "door_leaf_surface1", false, "DOOR_LEAF_SURFACE1");
        public final static Property Swing_plate_flatness1 = new Property(29, String.class, "swing_plate_flatness1", false, "SWING_PLATE_FLATNESS1");
        public final static Property Door_frame_left1 = new Property(30, String.class, "door_frame_left1", false, "DOOR_FRAME_LEFT1");
        public final static Property Door_frame_right1 = new Property(31, String.class, "door_frame_right1", false, "DOOR_FRAME_RIGHT1");
        public final static Property Door_leaf_positive1 = new Property(32, String.class, "door_leaf_positive1", false, "DOOR_LEAF_POSITIVE1");
        public final static Property Door_leaf_opposite1 = new Property(33, String.class, "door_leaf_opposite1", false, "DOOR_LEAF_OPPOSITE1");
        public final static Property Film_thickness11 = new Property(34, String.class, "film_thickness11", false, "FILM_THICKNESS11");
        public final static Property Film_thickness21 = new Property(35, String.class, "film_thickness21", false, "FILM_THICKNESS21");
        public final static Property Film_thickness31 = new Property(36, String.class, "film_thickness31", false, "FILM_THICKNESS31");
        public final static Property Film_thickness41 = new Property(37, String.class, "film_thickness41", false, "FILM_THICKNESS41");
        public final static Property Film_adhesion11 = new Property(38, String.class, "film_adhesion11", false, "FILM_ADHESION11");
        public final static Property Film_adhesion21 = new Property(39, String.class, "film_adhesion21", false, "FILM_ADHESION21");
        public final static Property Film_adhesion31 = new Property(40, String.class, "film_adhesion31", false, "FILM_ADHESION31");
        public final static Property Film_adhesion41 = new Property(41, String.class, "film_adhesion41", false, "FILM_ADHESION41");
        public final static Property Leg_height_vertical1 = new Property(42, String.class, "leg_height_vertical1", false, "LEG_HEIGHT_VERTICAL1");
        public final static Property Leg_height_across1 = new Property(43, String.class, "leg_height_across1", false, "LEG_HEIGHT_ACROSS1");
        public final static Property Carbonation_depth1 = new Property(44, String.class, "carbonation_depth1", false, "CARBONATION_DEPTH1");
        public final static Property Carbonation_depth2 = new Property(45, String.class, "carbonation_depth2", false, "CARBONATION_DEPTH2");
        public final static Property Carbonation_depth3 = new Property(46, String.class, "carbonation_depth3", false, "CARBONATION_DEPTH3");
        public final static Property Carbonation_depth4 = new Property(47, String.class, "carbonation_depth4", false, "CARBONATION_DEPTH4");
        public final static Property Carbonation_depth5 = new Property(48, String.class, "carbonation_depth5", false, "CARBONATION_DEPTH5");
        public final static Property Carbonation_depth6 = new Property(49, String.class, "carbonation_depth6", false, "CARBONATION_DEPTH6");
        public final static Property Carbonation_depth7 = new Property(50, String.class, "carbonation_depth7", false, "CARBONATION_DEPTH7");
        public final static Property Carbonation_depth8 = new Property(51, String.class, "carbonation_depth8", false, "CARBONATION_DEPTH8");
        public final static Property Carbonation_depth9 = new Property(52, String.class, "carbonation_depth9", false, "CARBONATION_DEPTH9");
        public final static Property Carbonation_depth10 = new Property(53, String.class, "carbonation_depth10", false, "CARBONATION_DEPTH10");
        public final static Property Carbonation_depth = new Property(54, String.class, "carbonation_depth", false, "CARBONATION_DEPTH");
        public final static Property Carbonation_depth_avg = new Property(55, String.class, "carbonation_depth_avg", false, "CARBONATION_DEPTH_AVG");
        public final static Property Springback_prediction = new Property(56, String.class, "springback_prediction", false, "SPRINGBACK_PREDICTION");
        public final static Property Crebound_file_name = new Property(57, String.class, "crebound_file_name", false, "CREBOUND_FILE_NAME");
        public final static Property Rebound_file_name = new Property(58, String.class, "rebound_file_name", false, "REBOUND_FILE_NAME");
        public final static Property Protective_layer_thickness = new Property(59, String.class, "protective_layer_thickness", false, "PROTECTIVE_LAYER_THICKNESS");
        public final static Property Steelbar_spacing = new Property(60, String.class, "steelbar_spacing", false, "STEELBAR_SPACING");
        public final static Property Bar_spacing_file_name = new Property(61, String.class, "bar_spacing_file_name", false, "BAR_SPACING_FILE_NAME");
        public final static Property Door_leaf_base_vent_width1 = new Property(62, String.class, "door_leaf_base_vent_width1", false, "DOOR_LEAF_BASE_VENT_WIDTH1");
        public final static Property Door_leaf_base_vent_height1 = new Property(63, String.class, "door_leaf_base_vent_height1", false, "DOOR_LEAF_BASE_VENT_HEIGHT1");
        public final static Property Hanging_plate_thickness_top1 = new Property(64, String.class, "hanging_plate_thickness_top1", false, "HANGING_PLATE_THICKNESS_TOP1");
        public final static Property Hanging_plate_thickness_bottom1 = new Property(65, String.class, "hanging_plate_thickness_bottom1", false, "HANGING_PLATE_THICKNESS_BOTTOM1");
        public final static Property Inside_plate_thickness1 = new Property(66, String.class, "inside_plate_thickness1", false, "INSIDE_PLATE_THICKNESS1");
        public final static Property Surface_gap1 = new Property(67, String.class, "surface_gap1", false, "SURFACE_GAP1");
        public final static Property Lm_fillister_left_top = new Property(68, String.class, "lm_fillister_left_top", false, "LM_FILLISTER_LEFT_TOP");
        public final static Property Lm_fillister_left_center = new Property(69, String.class, "lm_fillister_left_center", false, "LM_FILLISTER_LEFT_CENTER");
        public final static Property Lm_fillister_left_bottom = new Property(70, String.class, "lm_fillister_left_bottom", false, "LM_FILLISTER_LEFT_BOTTOM");
        public final static Property Lm_fillister_right_top = new Property(71, String.class, "lm_fillister_right_top", false, "LM_FILLISTER_RIGHT_TOP");
        public final static Property Lm_fillister_right_center = new Property(72, String.class, "lm_fillister_right_center", false, "LM_FILLISTER_RIGHT_CENTER");
        public final static Property Lm_fillister_right_bottom = new Property(73, String.class, "lm_fillister_right_bottom", false, "LM_FILLISTER_RIGHT_BOTTOM");
        public final static Property Lm_indentation_left_top = new Property(74, String.class, "lm_indentation_left_top", false, "LM_INDENTATION_LEFT_TOP");
        public final static Property Lm_indentation_left_center = new Property(75, String.class, "lm_indentation_left_center", false, "LM_INDENTATION_LEFT_CENTER");
        public final static Property Lm_indentation_left_bottom = new Property(76, String.class, "lm_indentation_left_bottom", false, "LM_INDENTATION_LEFT_BOTTOM");
        public final static Property Lm_indentation_right_top = new Property(77, String.class, "lm_indentation_right_top", false, "LM_INDENTATION_RIGHT_TOP");
        public final static Property Lm_indentation_right_center = new Property(78, String.class, "lm_indentation_right_center", false, "LM_INDENTATION_RIGHT_CENTER");
        public final static Property Lm_indentation_right_bottom = new Property(79, String.class, "lm_indentation_right_bottom", false, "LM_INDENTATION_RIGHT_BOTTOM");
        public final static Property Panel_thickness = new Property(80, String.class, "panel_thickness", false, "PANEL_THICKNESS");
        public final static Property Blm_fillister_left_top = new Property(81, String.class, "blm_fillister_left_top", false, "BLM_FILLISTER_LEFT_TOP");
        public final static Property Blm_fillister_left_center = new Property(82, String.class, "blm_fillister_left_center", false, "BLM_FILLISTER_LEFT_CENTER");
        public final static Property Blm_fillister_left_bottomp = new Property(83, String.class, "blm_fillister_left_bottomp", false, "BLM_FILLISTER_LEFT_BOTTOMP");
        public final static Property Blm_fillister_left_bottom = new Property(84, String.class, "blm_fillister_left_bottom", false, "BLM_FILLISTER_LEFT_BOTTOM");
        public final static Property Blm_fillister_right_top = new Property(85, String.class, "blm_fillister_right_top", false, "BLM_FILLISTER_RIGHT_TOP");
        public final static Property Blm_fillister_right_center = new Property(86, String.class, "blm_fillister_right_center", false, "BLM_FILLISTER_RIGHT_CENTER");
        public final static Property Blm_fillister_right_bottom = new Property(87, String.class, "blm_fillister_right_bottom", false, "BLM_FILLISTER_RIGHT_BOTTOM");
        public final static Property Hinge_axis_perpendicularity_bothway = new Property(88, String.class, "hinge_axis_perpendicularity_bothway", false, "HINGE_AXIS_PERPENDICULARITY_BOTHWAY");
        public final static Property Hinge_axis_perpendicularity_vertical = new Property(89, String.class, "hinge_axis_perpendicularity_vertical", false, "HINGE_AXIS_PERPENDICULARITY_VERTICAL");
        public final static Property Hinge_axis_perpendicularity_parallel = new Property(90, String.class, "hinge_axis_perpendicularity_parallel", false, "HINGE_AXIS_PERPENDICULARITY_PARALLEL");
        public final static Property Frame_inter_wall_verticality1 = new Property(91, String.class, "frame_inter_wall_verticality1", false, "FRAME_INTER_WALL_VERTICALITY1");
        public final static Property Frame_inter_wall_verticality2 = new Property(92, String.class, "frame_inter_wall_verticality2", false, "FRAME_INTER_WALL_VERTICALITY2");
        public final static Property Frame_inter_wall_verticality3 = new Property(93, String.class, "frame_inter_wall_verticality3", false, "FRAME_INTER_WALL_VERTICALITY3");
        public final static Property Frame_inter_wall_verticality4 = new Property(94, String.class, "frame_inter_wall_verticality4", false, "FRAME_INTER_WALL_VERTICALITY4");
        public final static Property Line_hammer_specifications = new Property(95, String.class, "line_hammer_specifications", false, "LINE_HAMMER_SPECIFICATIONS");
        public final static Property Door_open_force1 = new Property(96, String.class, "door_open_force1", false, "DOOR_OPEN_FORCE1");
        public final static Property Door_close_force1 = new Property(97, String.class, "door_close_force1", false, "DOOR_CLOSE_FORCE1");
        public final static Property Lock_control_force1 = new Property(98, String.class, "lock_control_force1", false, "LOCK_CONTROL_FORCE1");
        public final static Property Lock_control_forceNM1 = new Property(99, String.class, "lock_control_forceNM1", false, "LOCK_CONTROL_FORCE_NM1");
        public final static Property HandleLength = new Property(100, String.class, "handleLength", false, "HANDLE_LENGTH");
        public final static Property Performance_of_door_fans_left = new Property(101, String.class, "performance_of_door_fans_left", false, "PERFORMANCE_OF_DOOR_FANS_LEFT");
        public final static Property Door_fan_ambient_noise_left = new Property(102, String.class, "door_fan_ambient_noise_left", false, "DOOR_FAN_AMBIENT_NOISE_LEFT");
        public final static Property Door_leaf_noise_left = new Property(103, String.class, "door_leaf_noise_left", false, "DOOR_LEAF_NOISE_LEFT");
        public final static Property Performance_of_door_fans_right = new Property(104, String.class, "performance_of_door_fans_right", false, "PERFORMANCE_OF_DOOR_FANS_RIGHT");
        public final static Property Door_fan_ambient_noise_right = new Property(105, String.class, "door_fan_ambient_noise_right", false, "DOOR_FAN_AMBIENT_NOISE_RIGHT");
        public final static Property Door_leaf_noise_right = new Property(106, String.class, "door_leaf_noise_right", false, "DOOR_LEAF_NOISE_RIGHT");
        public final static Property Close_dangling_board_starting_force_top1 = new Property(107, String.class, "close_dangling_board_starting_force_top1", false, "CLOSE_DANGLING_BOARD_STARTING_FORCE_TOP1");
        public final static Property Swing_plate_quality = new Property(108, String.class, "swing_plate_quality", false, "SWING_PLATE_QUALITY");
        public final static Property Swing_plate_hingeseat_quality = new Property(109, String.class, "swing_plate_hingeseat_quality", false, "SWING_PLATE_HINGESEAT_QUALITY");
        public final static Property Swing_plate_closing_the_most_strongly_top1 = new Property(110, String.class, "swing_plate_closing_the_most_strongly_top1", false, "SWING_PLATE_CLOSING_THE_MOST_STRONGLY_TOP1");
        public final static Property Swing_plate_biggest_gap_between_door_leaf_top1 = new Property(111, String.class, "swing_plate_biggest_gap_between_door_leaf_top1", false, "SWING_PLATE_BIGGEST_GAP_BETWEEN_DOOR_LEAF_TOP1");
        public final static Property Door_frame_leaf_max_clearance1 = new Property(112, String.class, "door_frame_leaf_max_clearance1", false, "DOOR_FRAME_LEAF_MAX_CLEARANCE1");
    }


    public SampleCheckDao(DaoConfig config) {
        super(config);
    }
    
    public SampleCheckDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SAMPLE_CHECK\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"STATUS\" INTEGER NOT NULL ," + // 1: status
                "\"PID\" INTEGER NOT NULL ," + // 2: pid
                "\"DOOR_FRAME_HEIGHT1\" TEXT," + // 3: door_frame_height1
                "\"DOOR_FRAME_WIDTH1\" TEXT," + // 4: door_frame_width1
                "\"DOOR_FRAME_DIAGONAL\" TEXT," + // 5: door_frame_diagonal
                "\"DOOR_FRAME_DIAGONAL_BOTTOM_FULCRUM\" TEXT," + // 6: door_frame_diagonal_bottom_fulcrum
                "\"DOOR_FRAME_DIAGONAL_BOTTOM_FULCRUM_DIFFERENCE\" TEXT," + // 7: door_frame_diagonal_bottom_fulcrum_difference
                "\"DOOR_FRAME_DIAGONAL_TOP_FULCRUM\" TEXT," + // 8: door_frame_diagonal_top_fulcrum
                "\"DOOR_FRAME_DIAGONAL_TOP_FULCRUM_DIFFERENCE\" TEXT," + // 9: door_frame_diagonal_top_fulcrum_difference
                "\"DOOR_LEAF_HEIGHT1\" TEXT," + // 10: door_leaf_height1
                "\"DOOR_LEAF_WIDTH1\" TEXT," + // 11: door_leaf_width1
                "\"DOOR_LEAF_DIAGONAL\" TEXT," + // 12: door_leaf_diagonal
                "\"DOOR_LEAF_THICKESS\" TEXT," + // 13: door_leaf_thickess
                "\"EMBEDDED_PLATE_HEIGHT1\" TEXT," + // 14: embedded_plate_height1
                "\"HANGING_PLATE_HEIGHT1\" TEXT," + // 15: hanging_plate_height1
                "\"HANGING_PLATE_HEIGHT_CENTER1\" TEXT," + // 16: hanging_plate_height_center1
                "\"HANGING_PLATE_HEIGHT_BOTTOM1\" TEXT," + // 17: hanging_plate_height_bottom1
                "\"HANGING_PLATE_WIDTH1\" TEXT," + // 18: hanging_plate_width1
                "\"HANGING_PLATE_WIDTH_CENTER1\" TEXT," + // 19: hanging_plate_width_center1
                "\"HANGING_PLATE_WIDTH_BOTTOM1\" TEXT," + // 20: hanging_plate_width_bottom1
                "\"SWING_PLATE_DIAGONAL1\" TEXT," + // 21: swing_plate_diagonal1
                "\"SWING_PLATE_DIAGONAL2\" TEXT," + // 22: swing_plate_diagonal2
                "\"HINGEPAGE_SHAFT_DIAMETER1\" TEXT," + // 23: hingepage_shaft_diameter1
                "\"HINGEPAGE_HOLE_DIAMETER1\" TEXT," + // 24: hingepage_hole_diameter1
                "\"ATRESIA_SHAFT_DIAMETER1\" TEXT," + // 25: atresia_shaft_diameter1
                "\"ATRESIA_HOLE_DIAMETER1\" TEXT," + // 26: atresia_hole_diameter1
                "\"DOOR_FRAME_SURFACE1\" TEXT," + // 27: door_frame_surface1
                "\"DOOR_LEAF_SURFACE1\" TEXT," + // 28: door_leaf_surface1
                "\"SWING_PLATE_FLATNESS1\" TEXT," + // 29: swing_plate_flatness1
                "\"DOOR_FRAME_LEFT1\" TEXT," + // 30: door_frame_left1
                "\"DOOR_FRAME_RIGHT1\" TEXT," + // 31: door_frame_right1
                "\"DOOR_LEAF_POSITIVE1\" TEXT," + // 32: door_leaf_positive1
                "\"DOOR_LEAF_OPPOSITE1\" TEXT," + // 33: door_leaf_opposite1
                "\"FILM_THICKNESS11\" TEXT," + // 34: film_thickness11
                "\"FILM_THICKNESS21\" TEXT," + // 35: film_thickness21
                "\"FILM_THICKNESS31\" TEXT," + // 36: film_thickness31
                "\"FILM_THICKNESS41\" TEXT," + // 37: film_thickness41
                "\"FILM_ADHESION11\" TEXT," + // 38: film_adhesion11
                "\"FILM_ADHESION21\" TEXT," + // 39: film_adhesion21
                "\"FILM_ADHESION31\" TEXT," + // 40: film_adhesion31
                "\"FILM_ADHESION41\" TEXT," + // 41: film_adhesion41
                "\"LEG_HEIGHT_VERTICAL1\" TEXT," + // 42: leg_height_vertical1
                "\"LEG_HEIGHT_ACROSS1\" TEXT," + // 43: leg_height_across1
                "\"CARBONATION_DEPTH1\" TEXT," + // 44: carbonation_depth1
                "\"CARBONATION_DEPTH2\" TEXT," + // 45: carbonation_depth2
                "\"CARBONATION_DEPTH3\" TEXT," + // 46: carbonation_depth3
                "\"CARBONATION_DEPTH4\" TEXT," + // 47: carbonation_depth4
                "\"CARBONATION_DEPTH5\" TEXT," + // 48: carbonation_depth5
                "\"CARBONATION_DEPTH6\" TEXT," + // 49: carbonation_depth6
                "\"CARBONATION_DEPTH7\" TEXT," + // 50: carbonation_depth7
                "\"CARBONATION_DEPTH8\" TEXT," + // 51: carbonation_depth8
                "\"CARBONATION_DEPTH9\" TEXT," + // 52: carbonation_depth9
                "\"CARBONATION_DEPTH10\" TEXT," + // 53: carbonation_depth10
                "\"CARBONATION_DEPTH\" TEXT," + // 54: carbonation_depth
                "\"CARBONATION_DEPTH_AVG\" TEXT," + // 55: carbonation_depth_avg
                "\"SPRINGBACK_PREDICTION\" TEXT," + // 56: springback_prediction
                "\"CREBOUND_FILE_NAME\" TEXT," + // 57: crebound_file_name
                "\"REBOUND_FILE_NAME\" TEXT," + // 58: rebound_file_name
                "\"PROTECTIVE_LAYER_THICKNESS\" TEXT," + // 59: protective_layer_thickness
                "\"STEELBAR_SPACING\" TEXT," + // 60: steelbar_spacing
                "\"BAR_SPACING_FILE_NAME\" TEXT," + // 61: bar_spacing_file_name
                "\"DOOR_LEAF_BASE_VENT_WIDTH1\" TEXT," + // 62: door_leaf_base_vent_width1
                "\"DOOR_LEAF_BASE_VENT_HEIGHT1\" TEXT," + // 63: door_leaf_base_vent_height1
                "\"HANGING_PLATE_THICKNESS_TOP1\" TEXT," + // 64: hanging_plate_thickness_top1
                "\"HANGING_PLATE_THICKNESS_BOTTOM1\" TEXT," + // 65: hanging_plate_thickness_bottom1
                "\"INSIDE_PLATE_THICKNESS1\" TEXT," + // 66: inside_plate_thickness1
                "\"SURFACE_GAP1\" TEXT," + // 67: surface_gap1
                "\"LM_FILLISTER_LEFT_TOP\" TEXT," + // 68: lm_fillister_left_top
                "\"LM_FILLISTER_LEFT_CENTER\" TEXT," + // 69: lm_fillister_left_center
                "\"LM_FILLISTER_LEFT_BOTTOM\" TEXT," + // 70: lm_fillister_left_bottom
                "\"LM_FILLISTER_RIGHT_TOP\" TEXT," + // 71: lm_fillister_right_top
                "\"LM_FILLISTER_RIGHT_CENTER\" TEXT," + // 72: lm_fillister_right_center
                "\"LM_FILLISTER_RIGHT_BOTTOM\" TEXT," + // 73: lm_fillister_right_bottom
                "\"LM_INDENTATION_LEFT_TOP\" TEXT," + // 74: lm_indentation_left_top
                "\"LM_INDENTATION_LEFT_CENTER\" TEXT," + // 75: lm_indentation_left_center
                "\"LM_INDENTATION_LEFT_BOTTOM\" TEXT," + // 76: lm_indentation_left_bottom
                "\"LM_INDENTATION_RIGHT_TOP\" TEXT," + // 77: lm_indentation_right_top
                "\"LM_INDENTATION_RIGHT_CENTER\" TEXT," + // 78: lm_indentation_right_center
                "\"LM_INDENTATION_RIGHT_BOTTOM\" TEXT," + // 79: lm_indentation_right_bottom
                "\"PANEL_THICKNESS\" TEXT," + // 80: panel_thickness
                "\"BLM_FILLISTER_LEFT_TOP\" TEXT," + // 81: blm_fillister_left_top
                "\"BLM_FILLISTER_LEFT_CENTER\" TEXT," + // 82: blm_fillister_left_center
                "\"BLM_FILLISTER_LEFT_BOTTOMP\" TEXT," + // 83: blm_fillister_left_bottomp
                "\"BLM_FILLISTER_LEFT_BOTTOM\" TEXT," + // 84: blm_fillister_left_bottom
                "\"BLM_FILLISTER_RIGHT_TOP\" TEXT," + // 85: blm_fillister_right_top
                "\"BLM_FILLISTER_RIGHT_CENTER\" TEXT," + // 86: blm_fillister_right_center
                "\"BLM_FILLISTER_RIGHT_BOTTOM\" TEXT," + // 87: blm_fillister_right_bottom
                "\"HINGE_AXIS_PERPENDICULARITY_BOTHWAY\" TEXT," + // 88: hinge_axis_perpendicularity_bothway
                "\"HINGE_AXIS_PERPENDICULARITY_VERTICAL\" TEXT," + // 89: hinge_axis_perpendicularity_vertical
                "\"HINGE_AXIS_PERPENDICULARITY_PARALLEL\" TEXT," + // 90: hinge_axis_perpendicularity_parallel
                "\"FRAME_INTER_WALL_VERTICALITY1\" TEXT," + // 91: frame_inter_wall_verticality1
                "\"FRAME_INTER_WALL_VERTICALITY2\" TEXT," + // 92: frame_inter_wall_verticality2
                "\"FRAME_INTER_WALL_VERTICALITY3\" TEXT," + // 93: frame_inter_wall_verticality3
                "\"FRAME_INTER_WALL_VERTICALITY4\" TEXT," + // 94: frame_inter_wall_verticality4
                "\"LINE_HAMMER_SPECIFICATIONS\" TEXT," + // 95: line_hammer_specifications
                "\"DOOR_OPEN_FORCE1\" TEXT," + // 96: door_open_force1
                "\"DOOR_CLOSE_FORCE1\" TEXT," + // 97: door_close_force1
                "\"LOCK_CONTROL_FORCE1\" TEXT," + // 98: lock_control_force1
                "\"LOCK_CONTROL_FORCE_NM1\" TEXT," + // 99: lock_control_forceNM1
                "\"HANDLE_LENGTH\" TEXT," + // 100: handleLength
                "\"PERFORMANCE_OF_DOOR_FANS_LEFT\" TEXT," + // 101: performance_of_door_fans_left
                "\"DOOR_FAN_AMBIENT_NOISE_LEFT\" TEXT," + // 102: door_fan_ambient_noise_left
                "\"DOOR_LEAF_NOISE_LEFT\" TEXT," + // 103: door_leaf_noise_left
                "\"PERFORMANCE_OF_DOOR_FANS_RIGHT\" TEXT," + // 104: performance_of_door_fans_right
                "\"DOOR_FAN_AMBIENT_NOISE_RIGHT\" TEXT," + // 105: door_fan_ambient_noise_right
                "\"DOOR_LEAF_NOISE_RIGHT\" TEXT," + // 106: door_leaf_noise_right
                "\"CLOSE_DANGLING_BOARD_STARTING_FORCE_TOP1\" TEXT," + // 107: close_dangling_board_starting_force_top1
                "\"SWING_PLATE_QUALITY\" TEXT," + // 108: swing_plate_quality
                "\"SWING_PLATE_HINGESEAT_QUALITY\" TEXT," + // 109: swing_plate_hingeseat_quality
                "\"SWING_PLATE_CLOSING_THE_MOST_STRONGLY_TOP1\" TEXT," + // 110: swing_plate_closing_the_most_strongly_top1
                "\"SWING_PLATE_BIGGEST_GAP_BETWEEN_DOOR_LEAF_TOP1\" TEXT," + // 111: swing_plate_biggest_gap_between_door_leaf_top1
                "\"DOOR_FRAME_LEAF_MAX_CLEARANCE1\" TEXT);"); // 112: door_frame_leaf_max_clearance1
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SAMPLE_CHECK\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, SampleCheck entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getStatus());
        stmt.bindLong(3, entity.getPid());
 
        String door_frame_height1 = entity.getDoor_frame_height1();
        if (door_frame_height1 != null) {
            stmt.bindString(4, door_frame_height1);
        }
 
        String door_frame_width1 = entity.getDoor_frame_width1();
        if (door_frame_width1 != null) {
            stmt.bindString(5, door_frame_width1);
        }
 
        String door_frame_diagonal = entity.getDoor_frame_diagonal();
        if (door_frame_diagonal != null) {
            stmt.bindString(6, door_frame_diagonal);
        }
 
        String door_frame_diagonal_bottom_fulcrum = entity.getDoor_frame_diagonal_bottom_fulcrum();
        if (door_frame_diagonal_bottom_fulcrum != null) {
            stmt.bindString(7, door_frame_diagonal_bottom_fulcrum);
        }
 
        String door_frame_diagonal_bottom_fulcrum_difference = entity.getDoor_frame_diagonal_bottom_fulcrum_difference();
        if (door_frame_diagonal_bottom_fulcrum_difference != null) {
            stmt.bindString(8, door_frame_diagonal_bottom_fulcrum_difference);
        }
 
        String door_frame_diagonal_top_fulcrum = entity.getDoor_frame_diagonal_top_fulcrum();
        if (door_frame_diagonal_top_fulcrum != null) {
            stmt.bindString(9, door_frame_diagonal_top_fulcrum);
        }
 
        String door_frame_diagonal_top_fulcrum_difference = entity.getDoor_frame_diagonal_top_fulcrum_difference();
        if (door_frame_diagonal_top_fulcrum_difference != null) {
            stmt.bindString(10, door_frame_diagonal_top_fulcrum_difference);
        }
 
        String door_leaf_height1 = entity.getDoor_leaf_height1();
        if (door_leaf_height1 != null) {
            stmt.bindString(11, door_leaf_height1);
        }
 
        String door_leaf_width1 = entity.getDoor_leaf_width1();
        if (door_leaf_width1 != null) {
            stmt.bindString(12, door_leaf_width1);
        }
 
        String door_leaf_diagonal = entity.getDoor_leaf_diagonal();
        if (door_leaf_diagonal != null) {
            stmt.bindString(13, door_leaf_diagonal);
        }
 
        String door_leaf_thickess = entity.getDoor_leaf_thickess();
        if (door_leaf_thickess != null) {
            stmt.bindString(14, door_leaf_thickess);
        }
 
        String embedded_plate_height1 = entity.getEmbedded_plate_height1();
        if (embedded_plate_height1 != null) {
            stmt.bindString(15, embedded_plate_height1);
        }
 
        String hanging_plate_height1 = entity.getHanging_plate_height1();
        if (hanging_plate_height1 != null) {
            stmt.bindString(16, hanging_plate_height1);
        }
 
        String hanging_plate_height_center1 = entity.getHanging_plate_height_center1();
        if (hanging_plate_height_center1 != null) {
            stmt.bindString(17, hanging_plate_height_center1);
        }
 
        String hanging_plate_height_bottom1 = entity.getHanging_plate_height_bottom1();
        if (hanging_plate_height_bottom1 != null) {
            stmt.bindString(18, hanging_plate_height_bottom1);
        }
 
        String hanging_plate_width1 = entity.getHanging_plate_width1();
        if (hanging_plate_width1 != null) {
            stmt.bindString(19, hanging_plate_width1);
        }
 
        String hanging_plate_width_center1 = entity.getHanging_plate_width_center1();
        if (hanging_plate_width_center1 != null) {
            stmt.bindString(20, hanging_plate_width_center1);
        }
 
        String hanging_plate_width_bottom1 = entity.getHanging_plate_width_bottom1();
        if (hanging_plate_width_bottom1 != null) {
            stmt.bindString(21, hanging_plate_width_bottom1);
        }
 
        String swing_plate_diagonal1 = entity.getSwing_plate_diagonal1();
        if (swing_plate_diagonal1 != null) {
            stmt.bindString(22, swing_plate_diagonal1);
        }
 
        String swing_plate_diagonal2 = entity.getSwing_plate_diagonal2();
        if (swing_plate_diagonal2 != null) {
            stmt.bindString(23, swing_plate_diagonal2);
        }
 
        String hingepage_shaft_diameter1 = entity.getHingepage_shaft_diameter1();
        if (hingepage_shaft_diameter1 != null) {
            stmt.bindString(24, hingepage_shaft_diameter1);
        }
 
        String hingepage_hole_diameter1 = entity.getHingepage_hole_diameter1();
        if (hingepage_hole_diameter1 != null) {
            stmt.bindString(25, hingepage_hole_diameter1);
        }
 
        String atresia_shaft_diameter1 = entity.getAtresia_shaft_diameter1();
        if (atresia_shaft_diameter1 != null) {
            stmt.bindString(26, atresia_shaft_diameter1);
        }
 
        String atresia_hole_diameter1 = entity.getAtresia_hole_diameter1();
        if (atresia_hole_diameter1 != null) {
            stmt.bindString(27, atresia_hole_diameter1);
        }
 
        String door_frame_surface1 = entity.getDoor_frame_surface1();
        if (door_frame_surface1 != null) {
            stmt.bindString(28, door_frame_surface1);
        }
 
        String door_leaf_surface1 = entity.getDoor_leaf_surface1();
        if (door_leaf_surface1 != null) {
            stmt.bindString(29, door_leaf_surface1);
        }
 
        String swing_plate_flatness1 = entity.getSwing_plate_flatness1();
        if (swing_plate_flatness1 != null) {
            stmt.bindString(30, swing_plate_flatness1);
        }
 
        String door_frame_left1 = entity.getDoor_frame_left1();
        if (door_frame_left1 != null) {
            stmt.bindString(31, door_frame_left1);
        }
 
        String door_frame_right1 = entity.getDoor_frame_right1();
        if (door_frame_right1 != null) {
            stmt.bindString(32, door_frame_right1);
        }
 
        String door_leaf_positive1 = entity.getDoor_leaf_positive1();
        if (door_leaf_positive1 != null) {
            stmt.bindString(33, door_leaf_positive1);
        }
 
        String door_leaf_opposite1 = entity.getDoor_leaf_opposite1();
        if (door_leaf_opposite1 != null) {
            stmt.bindString(34, door_leaf_opposite1);
        }
 
        String film_thickness11 = entity.getFilm_thickness11();
        if (film_thickness11 != null) {
            stmt.bindString(35, film_thickness11);
        }
 
        String film_thickness21 = entity.getFilm_thickness21();
        if (film_thickness21 != null) {
            stmt.bindString(36, film_thickness21);
        }
 
        String film_thickness31 = entity.getFilm_thickness31();
        if (film_thickness31 != null) {
            stmt.bindString(37, film_thickness31);
        }
 
        String film_thickness41 = entity.getFilm_thickness41();
        if (film_thickness41 != null) {
            stmt.bindString(38, film_thickness41);
        }
 
        String film_adhesion11 = entity.getFilm_adhesion11();
        if (film_adhesion11 != null) {
            stmt.bindString(39, film_adhesion11);
        }
 
        String film_adhesion21 = entity.getFilm_adhesion21();
        if (film_adhesion21 != null) {
            stmt.bindString(40, film_adhesion21);
        }
 
        String film_adhesion31 = entity.getFilm_adhesion31();
        if (film_adhesion31 != null) {
            stmt.bindString(41, film_adhesion31);
        }
 
        String film_adhesion41 = entity.getFilm_adhesion41();
        if (film_adhesion41 != null) {
            stmt.bindString(42, film_adhesion41);
        }
 
        String leg_height_vertical1 = entity.getLeg_height_vertical1();
        if (leg_height_vertical1 != null) {
            stmt.bindString(43, leg_height_vertical1);
        }
 
        String leg_height_across1 = entity.getLeg_height_across1();
        if (leg_height_across1 != null) {
            stmt.bindString(44, leg_height_across1);
        }
 
        String carbonation_depth1 = entity.getCarbonation_depth1();
        if (carbonation_depth1 != null) {
            stmt.bindString(45, carbonation_depth1);
        }
 
        String carbonation_depth2 = entity.getCarbonation_depth2();
        if (carbonation_depth2 != null) {
            stmt.bindString(46, carbonation_depth2);
        }
 
        String carbonation_depth3 = entity.getCarbonation_depth3();
        if (carbonation_depth3 != null) {
            stmt.bindString(47, carbonation_depth3);
        }
 
        String carbonation_depth4 = entity.getCarbonation_depth4();
        if (carbonation_depth4 != null) {
            stmt.bindString(48, carbonation_depth4);
        }
 
        String carbonation_depth5 = entity.getCarbonation_depth5();
        if (carbonation_depth5 != null) {
            stmt.bindString(49, carbonation_depth5);
        }
 
        String carbonation_depth6 = entity.getCarbonation_depth6();
        if (carbonation_depth6 != null) {
            stmt.bindString(50, carbonation_depth6);
        }
 
        String carbonation_depth7 = entity.getCarbonation_depth7();
        if (carbonation_depth7 != null) {
            stmt.bindString(51, carbonation_depth7);
        }
 
        String carbonation_depth8 = entity.getCarbonation_depth8();
        if (carbonation_depth8 != null) {
            stmt.bindString(52, carbonation_depth8);
        }
 
        String carbonation_depth9 = entity.getCarbonation_depth9();
        if (carbonation_depth9 != null) {
            stmt.bindString(53, carbonation_depth9);
        }
 
        String carbonation_depth10 = entity.getCarbonation_depth10();
        if (carbonation_depth10 != null) {
            stmt.bindString(54, carbonation_depth10);
        }
 
        String carbonation_depth = entity.getCarbonation_depth();
        if (carbonation_depth != null) {
            stmt.bindString(55, carbonation_depth);
        }
 
        String carbonation_depth_avg = entity.getCarbonation_depth_avg();
        if (carbonation_depth_avg != null) {
            stmt.bindString(56, carbonation_depth_avg);
        }
 
        String springback_prediction = entity.getSpringback_prediction();
        if (springback_prediction != null) {
            stmt.bindString(57, springback_prediction);
        }
 
        String crebound_file_name = entity.getCrebound_file_name();
        if (crebound_file_name != null) {
            stmt.bindString(58, crebound_file_name);
        }
 
        String rebound_file_name = entity.getRebound_file_name();
        if (rebound_file_name != null) {
            stmt.bindString(59, rebound_file_name);
        }
 
        String protective_layer_thickness = entity.getProtective_layer_thickness();
        if (protective_layer_thickness != null) {
            stmt.bindString(60, protective_layer_thickness);
        }
 
        String steelbar_spacing = entity.getSteelbar_spacing();
        if (steelbar_spacing != null) {
            stmt.bindString(61, steelbar_spacing);
        }
 
        String bar_spacing_file_name = entity.getBar_spacing_file_name();
        if (bar_spacing_file_name != null) {
            stmt.bindString(62, bar_spacing_file_name);
        }
 
        String door_leaf_base_vent_width1 = entity.getDoor_leaf_base_vent_width1();
        if (door_leaf_base_vent_width1 != null) {
            stmt.bindString(63, door_leaf_base_vent_width1);
        }
 
        String door_leaf_base_vent_height1 = entity.getDoor_leaf_base_vent_height1();
        if (door_leaf_base_vent_height1 != null) {
            stmt.bindString(64, door_leaf_base_vent_height1);
        }
 
        String hanging_plate_thickness_top1 = entity.getHanging_plate_thickness_top1();
        if (hanging_plate_thickness_top1 != null) {
            stmt.bindString(65, hanging_plate_thickness_top1);
        }
 
        String hanging_plate_thickness_bottom1 = entity.getHanging_plate_thickness_bottom1();
        if (hanging_plate_thickness_bottom1 != null) {
            stmt.bindString(66, hanging_plate_thickness_bottom1);
        }
 
        String inside_plate_thickness1 = entity.getInside_plate_thickness1();
        if (inside_plate_thickness1 != null) {
            stmt.bindString(67, inside_plate_thickness1);
        }
 
        String surface_gap1 = entity.getSurface_gap1();
        if (surface_gap1 != null) {
            stmt.bindString(68, surface_gap1);
        }
 
        String lm_fillister_left_top = entity.getLm_fillister_left_top();
        if (lm_fillister_left_top != null) {
            stmt.bindString(69, lm_fillister_left_top);
        }
 
        String lm_fillister_left_center = entity.getLm_fillister_left_center();
        if (lm_fillister_left_center != null) {
            stmt.bindString(70, lm_fillister_left_center);
        }
 
        String lm_fillister_left_bottom = entity.getLm_fillister_left_bottom();
        if (lm_fillister_left_bottom != null) {
            stmt.bindString(71, lm_fillister_left_bottom);
        }
 
        String lm_fillister_right_top = entity.getLm_fillister_right_top();
        if (lm_fillister_right_top != null) {
            stmt.bindString(72, lm_fillister_right_top);
        }
 
        String lm_fillister_right_center = entity.getLm_fillister_right_center();
        if (lm_fillister_right_center != null) {
            stmt.bindString(73, lm_fillister_right_center);
        }
 
        String lm_fillister_right_bottom = entity.getLm_fillister_right_bottom();
        if (lm_fillister_right_bottom != null) {
            stmt.bindString(74, lm_fillister_right_bottom);
        }
 
        String lm_indentation_left_top = entity.getLm_indentation_left_top();
        if (lm_indentation_left_top != null) {
            stmt.bindString(75, lm_indentation_left_top);
        }
 
        String lm_indentation_left_center = entity.getLm_indentation_left_center();
        if (lm_indentation_left_center != null) {
            stmt.bindString(76, lm_indentation_left_center);
        }
 
        String lm_indentation_left_bottom = entity.getLm_indentation_left_bottom();
        if (lm_indentation_left_bottom != null) {
            stmt.bindString(77, lm_indentation_left_bottom);
        }
 
        String lm_indentation_right_top = entity.getLm_indentation_right_top();
        if (lm_indentation_right_top != null) {
            stmt.bindString(78, lm_indentation_right_top);
        }
 
        String lm_indentation_right_center = entity.getLm_indentation_right_center();
        if (lm_indentation_right_center != null) {
            stmt.bindString(79, lm_indentation_right_center);
        }
 
        String lm_indentation_right_bottom = entity.getLm_indentation_right_bottom();
        if (lm_indentation_right_bottom != null) {
            stmt.bindString(80, lm_indentation_right_bottom);
        }
 
        String panel_thickness = entity.getPanel_thickness();
        if (panel_thickness != null) {
            stmt.bindString(81, panel_thickness);
        }
 
        String blm_fillister_left_top = entity.getBlm_fillister_left_top();
        if (blm_fillister_left_top != null) {
            stmt.bindString(82, blm_fillister_left_top);
        }
 
        String blm_fillister_left_center = entity.getBlm_fillister_left_center();
        if (blm_fillister_left_center != null) {
            stmt.bindString(83, blm_fillister_left_center);
        }
 
        String blm_fillister_left_bottomp = entity.getBlm_fillister_left_bottomp();
        if (blm_fillister_left_bottomp != null) {
            stmt.bindString(84, blm_fillister_left_bottomp);
        }
 
        String blm_fillister_left_bottom = entity.getBlm_fillister_left_bottom();
        if (blm_fillister_left_bottom != null) {
            stmt.bindString(85, blm_fillister_left_bottom);
        }
 
        String blm_fillister_right_top = entity.getBlm_fillister_right_top();
        if (blm_fillister_right_top != null) {
            stmt.bindString(86, blm_fillister_right_top);
        }
 
        String blm_fillister_right_center = entity.getBlm_fillister_right_center();
        if (blm_fillister_right_center != null) {
            stmt.bindString(87, blm_fillister_right_center);
        }
 
        String blm_fillister_right_bottom = entity.getBlm_fillister_right_bottom();
        if (blm_fillister_right_bottom != null) {
            stmt.bindString(88, blm_fillister_right_bottom);
        }
 
        String hinge_axis_perpendicularity_bothway = entity.getHinge_axis_perpendicularity_bothway();
        if (hinge_axis_perpendicularity_bothway != null) {
            stmt.bindString(89, hinge_axis_perpendicularity_bothway);
        }
 
        String hinge_axis_perpendicularity_vertical = entity.getHinge_axis_perpendicularity_vertical();
        if (hinge_axis_perpendicularity_vertical != null) {
            stmt.bindString(90, hinge_axis_perpendicularity_vertical);
        }
 
        String hinge_axis_perpendicularity_parallel = entity.getHinge_axis_perpendicularity_parallel();
        if (hinge_axis_perpendicularity_parallel != null) {
            stmt.bindString(91, hinge_axis_perpendicularity_parallel);
        }
 
        String frame_inter_wall_verticality1 = entity.getFrame_inter_wall_verticality1();
        if (frame_inter_wall_verticality1 != null) {
            stmt.bindString(92, frame_inter_wall_verticality1);
        }
 
        String frame_inter_wall_verticality2 = entity.getFrame_inter_wall_verticality2();
        if (frame_inter_wall_verticality2 != null) {
            stmt.bindString(93, frame_inter_wall_verticality2);
        }
 
        String frame_inter_wall_verticality3 = entity.getFrame_inter_wall_verticality3();
        if (frame_inter_wall_verticality3 != null) {
            stmt.bindString(94, frame_inter_wall_verticality3);
        }
 
        String frame_inter_wall_verticality4 = entity.getFrame_inter_wall_verticality4();
        if (frame_inter_wall_verticality4 != null) {
            stmt.bindString(95, frame_inter_wall_verticality4);
        }
 
        String line_hammer_specifications = entity.getLine_hammer_specifications();
        if (line_hammer_specifications != null) {
            stmt.bindString(96, line_hammer_specifications);
        }
 
        String door_open_force1 = entity.getDoor_open_force1();
        if (door_open_force1 != null) {
            stmt.bindString(97, door_open_force1);
        }
 
        String door_close_force1 = entity.getDoor_close_force1();
        if (door_close_force1 != null) {
            stmt.bindString(98, door_close_force1);
        }
 
        String lock_control_force1 = entity.getLock_control_force1();
        if (lock_control_force1 != null) {
            stmt.bindString(99, lock_control_force1);
        }
 
        String lock_control_forceNM1 = entity.getLock_control_forceNM1();
        if (lock_control_forceNM1 != null) {
            stmt.bindString(100, lock_control_forceNM1);
        }
 
        String handleLength = entity.getHandleLength();
        if (handleLength != null) {
            stmt.bindString(101, handleLength);
        }
 
        String performance_of_door_fans_left = entity.getPerformance_of_door_fans_left();
        if (performance_of_door_fans_left != null) {
            stmt.bindString(102, performance_of_door_fans_left);
        }
 
        String door_fan_ambient_noise_left = entity.getDoor_fan_ambient_noise_left();
        if (door_fan_ambient_noise_left != null) {
            stmt.bindString(103, door_fan_ambient_noise_left);
        }
 
        String door_leaf_noise_left = entity.getDoor_leaf_noise_left();
        if (door_leaf_noise_left != null) {
            stmt.bindString(104, door_leaf_noise_left);
        }
 
        String performance_of_door_fans_right = entity.getPerformance_of_door_fans_right();
        if (performance_of_door_fans_right != null) {
            stmt.bindString(105, performance_of_door_fans_right);
        }
 
        String door_fan_ambient_noise_right = entity.getDoor_fan_ambient_noise_right();
        if (door_fan_ambient_noise_right != null) {
            stmt.bindString(106, door_fan_ambient_noise_right);
        }
 
        String door_leaf_noise_right = entity.getDoor_leaf_noise_right();
        if (door_leaf_noise_right != null) {
            stmt.bindString(107, door_leaf_noise_right);
        }
 
        String close_dangling_board_starting_force_top1 = entity.getClose_dangling_board_starting_force_top1();
        if (close_dangling_board_starting_force_top1 != null) {
            stmt.bindString(108, close_dangling_board_starting_force_top1);
        }
 
        String swing_plate_quality = entity.getSwing_plate_quality();
        if (swing_plate_quality != null) {
            stmt.bindString(109, swing_plate_quality);
        }
 
        String swing_plate_hingeseat_quality = entity.getSwing_plate_hingeseat_quality();
        if (swing_plate_hingeseat_quality != null) {
            stmt.bindString(110, swing_plate_hingeseat_quality);
        }
 
        String swing_plate_closing_the_most_strongly_top1 = entity.getSwing_plate_closing_the_most_strongly_top1();
        if (swing_plate_closing_the_most_strongly_top1 != null) {
            stmt.bindString(111, swing_plate_closing_the_most_strongly_top1);
        }
 
        String swing_plate_biggest_gap_between_door_leaf_top1 = entity.getSwing_plate_biggest_gap_between_door_leaf_top1();
        if (swing_plate_biggest_gap_between_door_leaf_top1 != null) {
            stmt.bindString(112, swing_plate_biggest_gap_between_door_leaf_top1);
        }
 
        String door_frame_leaf_max_clearance1 = entity.getDoor_frame_leaf_max_clearance1();
        if (door_frame_leaf_max_clearance1 != null) {
            stmt.bindString(113, door_frame_leaf_max_clearance1);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, SampleCheck entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getStatus());
        stmt.bindLong(3, entity.getPid());
 
        String door_frame_height1 = entity.getDoor_frame_height1();
        if (door_frame_height1 != null) {
            stmt.bindString(4, door_frame_height1);
        }
 
        String door_frame_width1 = entity.getDoor_frame_width1();
        if (door_frame_width1 != null) {
            stmt.bindString(5, door_frame_width1);
        }
 
        String door_frame_diagonal = entity.getDoor_frame_diagonal();
        if (door_frame_diagonal != null) {
            stmt.bindString(6, door_frame_diagonal);
        }
 
        String door_frame_diagonal_bottom_fulcrum = entity.getDoor_frame_diagonal_bottom_fulcrum();
        if (door_frame_diagonal_bottom_fulcrum != null) {
            stmt.bindString(7, door_frame_diagonal_bottom_fulcrum);
        }
 
        String door_frame_diagonal_bottom_fulcrum_difference = entity.getDoor_frame_diagonal_bottom_fulcrum_difference();
        if (door_frame_diagonal_bottom_fulcrum_difference != null) {
            stmt.bindString(8, door_frame_diagonal_bottom_fulcrum_difference);
        }
 
        String door_frame_diagonal_top_fulcrum = entity.getDoor_frame_diagonal_top_fulcrum();
        if (door_frame_diagonal_top_fulcrum != null) {
            stmt.bindString(9, door_frame_diagonal_top_fulcrum);
        }
 
        String door_frame_diagonal_top_fulcrum_difference = entity.getDoor_frame_diagonal_top_fulcrum_difference();
        if (door_frame_diagonal_top_fulcrum_difference != null) {
            stmt.bindString(10, door_frame_diagonal_top_fulcrum_difference);
        }
 
        String door_leaf_height1 = entity.getDoor_leaf_height1();
        if (door_leaf_height1 != null) {
            stmt.bindString(11, door_leaf_height1);
        }
 
        String door_leaf_width1 = entity.getDoor_leaf_width1();
        if (door_leaf_width1 != null) {
            stmt.bindString(12, door_leaf_width1);
        }
 
        String door_leaf_diagonal = entity.getDoor_leaf_diagonal();
        if (door_leaf_diagonal != null) {
            stmt.bindString(13, door_leaf_diagonal);
        }
 
        String door_leaf_thickess = entity.getDoor_leaf_thickess();
        if (door_leaf_thickess != null) {
            stmt.bindString(14, door_leaf_thickess);
        }
 
        String embedded_plate_height1 = entity.getEmbedded_plate_height1();
        if (embedded_plate_height1 != null) {
            stmt.bindString(15, embedded_plate_height1);
        }
 
        String hanging_plate_height1 = entity.getHanging_plate_height1();
        if (hanging_plate_height1 != null) {
            stmt.bindString(16, hanging_plate_height1);
        }
 
        String hanging_plate_height_center1 = entity.getHanging_plate_height_center1();
        if (hanging_plate_height_center1 != null) {
            stmt.bindString(17, hanging_plate_height_center1);
        }
 
        String hanging_plate_height_bottom1 = entity.getHanging_plate_height_bottom1();
        if (hanging_plate_height_bottom1 != null) {
            stmt.bindString(18, hanging_plate_height_bottom1);
        }
 
        String hanging_plate_width1 = entity.getHanging_plate_width1();
        if (hanging_plate_width1 != null) {
            stmt.bindString(19, hanging_plate_width1);
        }
 
        String hanging_plate_width_center1 = entity.getHanging_plate_width_center1();
        if (hanging_plate_width_center1 != null) {
            stmt.bindString(20, hanging_plate_width_center1);
        }
 
        String hanging_plate_width_bottom1 = entity.getHanging_plate_width_bottom1();
        if (hanging_plate_width_bottom1 != null) {
            stmt.bindString(21, hanging_plate_width_bottom1);
        }
 
        String swing_plate_diagonal1 = entity.getSwing_plate_diagonal1();
        if (swing_plate_diagonal1 != null) {
            stmt.bindString(22, swing_plate_diagonal1);
        }
 
        String swing_plate_diagonal2 = entity.getSwing_plate_diagonal2();
        if (swing_plate_diagonal2 != null) {
            stmt.bindString(23, swing_plate_diagonal2);
        }
 
        String hingepage_shaft_diameter1 = entity.getHingepage_shaft_diameter1();
        if (hingepage_shaft_diameter1 != null) {
            stmt.bindString(24, hingepage_shaft_diameter1);
        }
 
        String hingepage_hole_diameter1 = entity.getHingepage_hole_diameter1();
        if (hingepage_hole_diameter1 != null) {
            stmt.bindString(25, hingepage_hole_diameter1);
        }
 
        String atresia_shaft_diameter1 = entity.getAtresia_shaft_diameter1();
        if (atresia_shaft_diameter1 != null) {
            stmt.bindString(26, atresia_shaft_diameter1);
        }
 
        String atresia_hole_diameter1 = entity.getAtresia_hole_diameter1();
        if (atresia_hole_diameter1 != null) {
            stmt.bindString(27, atresia_hole_diameter1);
        }
 
        String door_frame_surface1 = entity.getDoor_frame_surface1();
        if (door_frame_surface1 != null) {
            stmt.bindString(28, door_frame_surface1);
        }
 
        String door_leaf_surface1 = entity.getDoor_leaf_surface1();
        if (door_leaf_surface1 != null) {
            stmt.bindString(29, door_leaf_surface1);
        }
 
        String swing_plate_flatness1 = entity.getSwing_plate_flatness1();
        if (swing_plate_flatness1 != null) {
            stmt.bindString(30, swing_plate_flatness1);
        }
 
        String door_frame_left1 = entity.getDoor_frame_left1();
        if (door_frame_left1 != null) {
            stmt.bindString(31, door_frame_left1);
        }
 
        String door_frame_right1 = entity.getDoor_frame_right1();
        if (door_frame_right1 != null) {
            stmt.bindString(32, door_frame_right1);
        }
 
        String door_leaf_positive1 = entity.getDoor_leaf_positive1();
        if (door_leaf_positive1 != null) {
            stmt.bindString(33, door_leaf_positive1);
        }
 
        String door_leaf_opposite1 = entity.getDoor_leaf_opposite1();
        if (door_leaf_opposite1 != null) {
            stmt.bindString(34, door_leaf_opposite1);
        }
 
        String film_thickness11 = entity.getFilm_thickness11();
        if (film_thickness11 != null) {
            stmt.bindString(35, film_thickness11);
        }
 
        String film_thickness21 = entity.getFilm_thickness21();
        if (film_thickness21 != null) {
            stmt.bindString(36, film_thickness21);
        }
 
        String film_thickness31 = entity.getFilm_thickness31();
        if (film_thickness31 != null) {
            stmt.bindString(37, film_thickness31);
        }
 
        String film_thickness41 = entity.getFilm_thickness41();
        if (film_thickness41 != null) {
            stmt.bindString(38, film_thickness41);
        }
 
        String film_adhesion11 = entity.getFilm_adhesion11();
        if (film_adhesion11 != null) {
            stmt.bindString(39, film_adhesion11);
        }
 
        String film_adhesion21 = entity.getFilm_adhesion21();
        if (film_adhesion21 != null) {
            stmt.bindString(40, film_adhesion21);
        }
 
        String film_adhesion31 = entity.getFilm_adhesion31();
        if (film_adhesion31 != null) {
            stmt.bindString(41, film_adhesion31);
        }
 
        String film_adhesion41 = entity.getFilm_adhesion41();
        if (film_adhesion41 != null) {
            stmt.bindString(42, film_adhesion41);
        }
 
        String leg_height_vertical1 = entity.getLeg_height_vertical1();
        if (leg_height_vertical1 != null) {
            stmt.bindString(43, leg_height_vertical1);
        }
 
        String leg_height_across1 = entity.getLeg_height_across1();
        if (leg_height_across1 != null) {
            stmt.bindString(44, leg_height_across1);
        }
 
        String carbonation_depth1 = entity.getCarbonation_depth1();
        if (carbonation_depth1 != null) {
            stmt.bindString(45, carbonation_depth1);
        }
 
        String carbonation_depth2 = entity.getCarbonation_depth2();
        if (carbonation_depth2 != null) {
            stmt.bindString(46, carbonation_depth2);
        }
 
        String carbonation_depth3 = entity.getCarbonation_depth3();
        if (carbonation_depth3 != null) {
            stmt.bindString(47, carbonation_depth3);
        }
 
        String carbonation_depth4 = entity.getCarbonation_depth4();
        if (carbonation_depth4 != null) {
            stmt.bindString(48, carbonation_depth4);
        }
 
        String carbonation_depth5 = entity.getCarbonation_depth5();
        if (carbonation_depth5 != null) {
            stmt.bindString(49, carbonation_depth5);
        }
 
        String carbonation_depth6 = entity.getCarbonation_depth6();
        if (carbonation_depth6 != null) {
            stmt.bindString(50, carbonation_depth6);
        }
 
        String carbonation_depth7 = entity.getCarbonation_depth7();
        if (carbonation_depth7 != null) {
            stmt.bindString(51, carbonation_depth7);
        }
 
        String carbonation_depth8 = entity.getCarbonation_depth8();
        if (carbonation_depth8 != null) {
            stmt.bindString(52, carbonation_depth8);
        }
 
        String carbonation_depth9 = entity.getCarbonation_depth9();
        if (carbonation_depth9 != null) {
            stmt.bindString(53, carbonation_depth9);
        }
 
        String carbonation_depth10 = entity.getCarbonation_depth10();
        if (carbonation_depth10 != null) {
            stmt.bindString(54, carbonation_depth10);
        }
 
        String carbonation_depth = entity.getCarbonation_depth();
        if (carbonation_depth != null) {
            stmt.bindString(55, carbonation_depth);
        }
 
        String carbonation_depth_avg = entity.getCarbonation_depth_avg();
        if (carbonation_depth_avg != null) {
            stmt.bindString(56, carbonation_depth_avg);
        }
 
        String springback_prediction = entity.getSpringback_prediction();
        if (springback_prediction != null) {
            stmt.bindString(57, springback_prediction);
        }
 
        String crebound_file_name = entity.getCrebound_file_name();
        if (crebound_file_name != null) {
            stmt.bindString(58, crebound_file_name);
        }
 
        String rebound_file_name = entity.getRebound_file_name();
        if (rebound_file_name != null) {
            stmt.bindString(59, rebound_file_name);
        }
 
        String protective_layer_thickness = entity.getProtective_layer_thickness();
        if (protective_layer_thickness != null) {
            stmt.bindString(60, protective_layer_thickness);
        }
 
        String steelbar_spacing = entity.getSteelbar_spacing();
        if (steelbar_spacing != null) {
            stmt.bindString(61, steelbar_spacing);
        }
 
        String bar_spacing_file_name = entity.getBar_spacing_file_name();
        if (bar_spacing_file_name != null) {
            stmt.bindString(62, bar_spacing_file_name);
        }
 
        String door_leaf_base_vent_width1 = entity.getDoor_leaf_base_vent_width1();
        if (door_leaf_base_vent_width1 != null) {
            stmt.bindString(63, door_leaf_base_vent_width1);
        }
 
        String door_leaf_base_vent_height1 = entity.getDoor_leaf_base_vent_height1();
        if (door_leaf_base_vent_height1 != null) {
            stmt.bindString(64, door_leaf_base_vent_height1);
        }
 
        String hanging_plate_thickness_top1 = entity.getHanging_plate_thickness_top1();
        if (hanging_plate_thickness_top1 != null) {
            stmt.bindString(65, hanging_plate_thickness_top1);
        }
 
        String hanging_plate_thickness_bottom1 = entity.getHanging_plate_thickness_bottom1();
        if (hanging_plate_thickness_bottom1 != null) {
            stmt.bindString(66, hanging_plate_thickness_bottom1);
        }
 
        String inside_plate_thickness1 = entity.getInside_plate_thickness1();
        if (inside_plate_thickness1 != null) {
            stmt.bindString(67, inside_plate_thickness1);
        }
 
        String surface_gap1 = entity.getSurface_gap1();
        if (surface_gap1 != null) {
            stmt.bindString(68, surface_gap1);
        }
 
        String lm_fillister_left_top = entity.getLm_fillister_left_top();
        if (lm_fillister_left_top != null) {
            stmt.bindString(69, lm_fillister_left_top);
        }
 
        String lm_fillister_left_center = entity.getLm_fillister_left_center();
        if (lm_fillister_left_center != null) {
            stmt.bindString(70, lm_fillister_left_center);
        }
 
        String lm_fillister_left_bottom = entity.getLm_fillister_left_bottom();
        if (lm_fillister_left_bottom != null) {
            stmt.bindString(71, lm_fillister_left_bottom);
        }
 
        String lm_fillister_right_top = entity.getLm_fillister_right_top();
        if (lm_fillister_right_top != null) {
            stmt.bindString(72, lm_fillister_right_top);
        }
 
        String lm_fillister_right_center = entity.getLm_fillister_right_center();
        if (lm_fillister_right_center != null) {
            stmt.bindString(73, lm_fillister_right_center);
        }
 
        String lm_fillister_right_bottom = entity.getLm_fillister_right_bottom();
        if (lm_fillister_right_bottom != null) {
            stmt.bindString(74, lm_fillister_right_bottom);
        }
 
        String lm_indentation_left_top = entity.getLm_indentation_left_top();
        if (lm_indentation_left_top != null) {
            stmt.bindString(75, lm_indentation_left_top);
        }
 
        String lm_indentation_left_center = entity.getLm_indentation_left_center();
        if (lm_indentation_left_center != null) {
            stmt.bindString(76, lm_indentation_left_center);
        }
 
        String lm_indentation_left_bottom = entity.getLm_indentation_left_bottom();
        if (lm_indentation_left_bottom != null) {
            stmt.bindString(77, lm_indentation_left_bottom);
        }
 
        String lm_indentation_right_top = entity.getLm_indentation_right_top();
        if (lm_indentation_right_top != null) {
            stmt.bindString(78, lm_indentation_right_top);
        }
 
        String lm_indentation_right_center = entity.getLm_indentation_right_center();
        if (lm_indentation_right_center != null) {
            stmt.bindString(79, lm_indentation_right_center);
        }
 
        String lm_indentation_right_bottom = entity.getLm_indentation_right_bottom();
        if (lm_indentation_right_bottom != null) {
            stmt.bindString(80, lm_indentation_right_bottom);
        }
 
        String panel_thickness = entity.getPanel_thickness();
        if (panel_thickness != null) {
            stmt.bindString(81, panel_thickness);
        }
 
        String blm_fillister_left_top = entity.getBlm_fillister_left_top();
        if (blm_fillister_left_top != null) {
            stmt.bindString(82, blm_fillister_left_top);
        }
 
        String blm_fillister_left_center = entity.getBlm_fillister_left_center();
        if (blm_fillister_left_center != null) {
            stmt.bindString(83, blm_fillister_left_center);
        }
 
        String blm_fillister_left_bottomp = entity.getBlm_fillister_left_bottomp();
        if (blm_fillister_left_bottomp != null) {
            stmt.bindString(84, blm_fillister_left_bottomp);
        }
 
        String blm_fillister_left_bottom = entity.getBlm_fillister_left_bottom();
        if (blm_fillister_left_bottom != null) {
            stmt.bindString(85, blm_fillister_left_bottom);
        }
 
        String blm_fillister_right_top = entity.getBlm_fillister_right_top();
        if (blm_fillister_right_top != null) {
            stmt.bindString(86, blm_fillister_right_top);
        }
 
        String blm_fillister_right_center = entity.getBlm_fillister_right_center();
        if (blm_fillister_right_center != null) {
            stmt.bindString(87, blm_fillister_right_center);
        }
 
        String blm_fillister_right_bottom = entity.getBlm_fillister_right_bottom();
        if (blm_fillister_right_bottom != null) {
            stmt.bindString(88, blm_fillister_right_bottom);
        }
 
        String hinge_axis_perpendicularity_bothway = entity.getHinge_axis_perpendicularity_bothway();
        if (hinge_axis_perpendicularity_bothway != null) {
            stmt.bindString(89, hinge_axis_perpendicularity_bothway);
        }
 
        String hinge_axis_perpendicularity_vertical = entity.getHinge_axis_perpendicularity_vertical();
        if (hinge_axis_perpendicularity_vertical != null) {
            stmt.bindString(90, hinge_axis_perpendicularity_vertical);
        }
 
        String hinge_axis_perpendicularity_parallel = entity.getHinge_axis_perpendicularity_parallel();
        if (hinge_axis_perpendicularity_parallel != null) {
            stmt.bindString(91, hinge_axis_perpendicularity_parallel);
        }
 
        String frame_inter_wall_verticality1 = entity.getFrame_inter_wall_verticality1();
        if (frame_inter_wall_verticality1 != null) {
            stmt.bindString(92, frame_inter_wall_verticality1);
        }
 
        String frame_inter_wall_verticality2 = entity.getFrame_inter_wall_verticality2();
        if (frame_inter_wall_verticality2 != null) {
            stmt.bindString(93, frame_inter_wall_verticality2);
        }
 
        String frame_inter_wall_verticality3 = entity.getFrame_inter_wall_verticality3();
        if (frame_inter_wall_verticality3 != null) {
            stmt.bindString(94, frame_inter_wall_verticality3);
        }
 
        String frame_inter_wall_verticality4 = entity.getFrame_inter_wall_verticality4();
        if (frame_inter_wall_verticality4 != null) {
            stmt.bindString(95, frame_inter_wall_verticality4);
        }
 
        String line_hammer_specifications = entity.getLine_hammer_specifications();
        if (line_hammer_specifications != null) {
            stmt.bindString(96, line_hammer_specifications);
        }
 
        String door_open_force1 = entity.getDoor_open_force1();
        if (door_open_force1 != null) {
            stmt.bindString(97, door_open_force1);
        }
 
        String door_close_force1 = entity.getDoor_close_force1();
        if (door_close_force1 != null) {
            stmt.bindString(98, door_close_force1);
        }
 
        String lock_control_force1 = entity.getLock_control_force1();
        if (lock_control_force1 != null) {
            stmt.bindString(99, lock_control_force1);
        }
 
        String lock_control_forceNM1 = entity.getLock_control_forceNM1();
        if (lock_control_forceNM1 != null) {
            stmt.bindString(100, lock_control_forceNM1);
        }
 
        String handleLength = entity.getHandleLength();
        if (handleLength != null) {
            stmt.bindString(101, handleLength);
        }
 
        String performance_of_door_fans_left = entity.getPerformance_of_door_fans_left();
        if (performance_of_door_fans_left != null) {
            stmt.bindString(102, performance_of_door_fans_left);
        }
 
        String door_fan_ambient_noise_left = entity.getDoor_fan_ambient_noise_left();
        if (door_fan_ambient_noise_left != null) {
            stmt.bindString(103, door_fan_ambient_noise_left);
        }
 
        String door_leaf_noise_left = entity.getDoor_leaf_noise_left();
        if (door_leaf_noise_left != null) {
            stmt.bindString(104, door_leaf_noise_left);
        }
 
        String performance_of_door_fans_right = entity.getPerformance_of_door_fans_right();
        if (performance_of_door_fans_right != null) {
            stmt.bindString(105, performance_of_door_fans_right);
        }
 
        String door_fan_ambient_noise_right = entity.getDoor_fan_ambient_noise_right();
        if (door_fan_ambient_noise_right != null) {
            stmt.bindString(106, door_fan_ambient_noise_right);
        }
 
        String door_leaf_noise_right = entity.getDoor_leaf_noise_right();
        if (door_leaf_noise_right != null) {
            stmt.bindString(107, door_leaf_noise_right);
        }
 
        String close_dangling_board_starting_force_top1 = entity.getClose_dangling_board_starting_force_top1();
        if (close_dangling_board_starting_force_top1 != null) {
            stmt.bindString(108, close_dangling_board_starting_force_top1);
        }
 
        String swing_plate_quality = entity.getSwing_plate_quality();
        if (swing_plate_quality != null) {
            stmt.bindString(109, swing_plate_quality);
        }
 
        String swing_plate_hingeseat_quality = entity.getSwing_plate_hingeseat_quality();
        if (swing_plate_hingeseat_quality != null) {
            stmt.bindString(110, swing_plate_hingeseat_quality);
        }
 
        String swing_plate_closing_the_most_strongly_top1 = entity.getSwing_plate_closing_the_most_strongly_top1();
        if (swing_plate_closing_the_most_strongly_top1 != null) {
            stmt.bindString(111, swing_plate_closing_the_most_strongly_top1);
        }
 
        String swing_plate_biggest_gap_between_door_leaf_top1 = entity.getSwing_plate_biggest_gap_between_door_leaf_top1();
        if (swing_plate_biggest_gap_between_door_leaf_top1 != null) {
            stmt.bindString(112, swing_plate_biggest_gap_between_door_leaf_top1);
        }
 
        String door_frame_leaf_max_clearance1 = entity.getDoor_frame_leaf_max_clearance1();
        if (door_frame_leaf_max_clearance1 != null) {
            stmt.bindString(113, door_frame_leaf_max_clearance1);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public SampleCheck readEntity(Cursor cursor, int offset) {
        SampleCheck entity = new SampleCheck( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // status
            cursor.getLong(offset + 2), // pid
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // door_frame_height1
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // door_frame_width1
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // door_frame_diagonal
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // door_frame_diagonal_bottom_fulcrum
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // door_frame_diagonal_bottom_fulcrum_difference
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // door_frame_diagonal_top_fulcrum
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // door_frame_diagonal_top_fulcrum_difference
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // door_leaf_height1
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // door_leaf_width1
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // door_leaf_diagonal
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // door_leaf_thickess
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // embedded_plate_height1
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // hanging_plate_height1
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // hanging_plate_height_center1
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // hanging_plate_height_bottom1
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // hanging_plate_width1
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // hanging_plate_width_center1
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // hanging_plate_width_bottom1
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // swing_plate_diagonal1
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // swing_plate_diagonal2
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // hingepage_shaft_diameter1
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // hingepage_hole_diameter1
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // atresia_shaft_diameter1
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // atresia_hole_diameter1
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // door_frame_surface1
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // door_leaf_surface1
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // swing_plate_flatness1
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // door_frame_left1
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // door_frame_right1
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // door_leaf_positive1
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // door_leaf_opposite1
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // film_thickness11
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // film_thickness21
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // film_thickness31
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // film_thickness41
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // film_adhesion11
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // film_adhesion21
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // film_adhesion31
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // film_adhesion41
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // leg_height_vertical1
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // leg_height_across1
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // carbonation_depth1
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // carbonation_depth2
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // carbonation_depth3
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // carbonation_depth4
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // carbonation_depth5
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // carbonation_depth6
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // carbonation_depth7
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // carbonation_depth8
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // carbonation_depth9
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // carbonation_depth10
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // carbonation_depth
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // carbonation_depth_avg
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // springback_prediction
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // crebound_file_name
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // rebound_file_name
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // protective_layer_thickness
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // steelbar_spacing
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // bar_spacing_file_name
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // door_leaf_base_vent_width1
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // door_leaf_base_vent_height1
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // hanging_plate_thickness_top1
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // hanging_plate_thickness_bottom1
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // inside_plate_thickness1
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // surface_gap1
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // lm_fillister_left_top
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // lm_fillister_left_center
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // lm_fillister_left_bottom
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // lm_fillister_right_top
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // lm_fillister_right_center
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // lm_fillister_right_bottom
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // lm_indentation_left_top
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // lm_indentation_left_center
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // lm_indentation_left_bottom
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // lm_indentation_right_top
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // lm_indentation_right_center
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // lm_indentation_right_bottom
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // panel_thickness
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // blm_fillister_left_top
            cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82), // blm_fillister_left_center
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // blm_fillister_left_bottomp
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // blm_fillister_left_bottom
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // blm_fillister_right_top
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // blm_fillister_right_center
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // blm_fillister_right_bottom
            cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88), // hinge_axis_perpendicularity_bothway
            cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89), // hinge_axis_perpendicularity_vertical
            cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90), // hinge_axis_perpendicularity_parallel
            cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91), // frame_inter_wall_verticality1
            cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92), // frame_inter_wall_verticality2
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93), // frame_inter_wall_verticality3
            cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94), // frame_inter_wall_verticality4
            cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95), // line_hammer_specifications
            cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96), // door_open_force1
            cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97), // door_close_force1
            cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98), // lock_control_force1
            cursor.isNull(offset + 99) ? null : cursor.getString(offset + 99), // lock_control_forceNM1
            cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100), // handleLength
            cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101), // performance_of_door_fans_left
            cursor.isNull(offset + 102) ? null : cursor.getString(offset + 102), // door_fan_ambient_noise_left
            cursor.isNull(offset + 103) ? null : cursor.getString(offset + 103), // door_leaf_noise_left
            cursor.isNull(offset + 104) ? null : cursor.getString(offset + 104), // performance_of_door_fans_right
            cursor.isNull(offset + 105) ? null : cursor.getString(offset + 105), // door_fan_ambient_noise_right
            cursor.isNull(offset + 106) ? null : cursor.getString(offset + 106), // door_leaf_noise_right
            cursor.isNull(offset + 107) ? null : cursor.getString(offset + 107), // close_dangling_board_starting_force_top1
            cursor.isNull(offset + 108) ? null : cursor.getString(offset + 108), // swing_plate_quality
            cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109), // swing_plate_hingeseat_quality
            cursor.isNull(offset + 110) ? null : cursor.getString(offset + 110), // swing_plate_closing_the_most_strongly_top1
            cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111), // swing_plate_biggest_gap_between_door_leaf_top1
            cursor.isNull(offset + 112) ? null : cursor.getString(offset + 112) // door_frame_leaf_max_clearance1
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, SampleCheck entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setStatus(cursor.getInt(offset + 1));
        entity.setPid(cursor.getLong(offset + 2));
        entity.setDoor_frame_height1(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDoor_frame_width1(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDoor_frame_diagonal(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setDoor_frame_diagonal_bottom_fulcrum(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setDoor_frame_diagonal_bottom_fulcrum_difference(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setDoor_frame_diagonal_top_fulcrum(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setDoor_frame_diagonal_top_fulcrum_difference(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setDoor_leaf_height1(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDoor_leaf_width1(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setDoor_leaf_diagonal(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setDoor_leaf_thickess(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setEmbedded_plate_height1(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setHanging_plate_height1(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setHanging_plate_height_center1(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setHanging_plate_height_bottom1(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setHanging_plate_width1(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setHanging_plate_width_center1(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setHanging_plate_width_bottom1(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setSwing_plate_diagonal1(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setSwing_plate_diagonal2(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setHingepage_shaft_diameter1(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setHingepage_hole_diameter1(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setAtresia_shaft_diameter1(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setAtresia_hole_diameter1(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setDoor_frame_surface1(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDoor_leaf_surface1(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setSwing_plate_flatness1(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setDoor_frame_left1(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setDoor_frame_right1(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setDoor_leaf_positive1(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setDoor_leaf_opposite1(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setFilm_thickness11(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setFilm_thickness21(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setFilm_thickness31(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setFilm_thickness41(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setFilm_adhesion11(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setFilm_adhesion21(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setFilm_adhesion31(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setFilm_adhesion41(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setLeg_height_vertical1(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setLeg_height_across1(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setCarbonation_depth1(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setCarbonation_depth2(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setCarbonation_depth3(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setCarbonation_depth4(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setCarbonation_depth5(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setCarbonation_depth6(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setCarbonation_depth7(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setCarbonation_depth8(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setCarbonation_depth9(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setCarbonation_depth10(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setCarbonation_depth(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setCarbonation_depth_avg(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setSpringback_prediction(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setCrebound_file_name(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setRebound_file_name(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setProtective_layer_thickness(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setSteelbar_spacing(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setBar_spacing_file_name(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setDoor_leaf_base_vent_width1(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setDoor_leaf_base_vent_height1(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setHanging_plate_thickness_top1(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setHanging_plate_thickness_bottom1(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setInside_plate_thickness1(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setSurface_gap1(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setLm_fillister_left_top(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setLm_fillister_left_center(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setLm_fillister_left_bottom(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setLm_fillister_right_top(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setLm_fillister_right_center(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setLm_fillister_right_bottom(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setLm_indentation_left_top(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setLm_indentation_left_center(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setLm_indentation_left_bottom(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setLm_indentation_right_top(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setLm_indentation_right_center(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setLm_indentation_right_bottom(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setPanel_thickness(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setBlm_fillister_left_top(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setBlm_fillister_left_center(cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82));
        entity.setBlm_fillister_left_bottomp(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setBlm_fillister_left_bottom(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setBlm_fillister_right_top(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setBlm_fillister_right_center(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setBlm_fillister_right_bottom(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setHinge_axis_perpendicularity_bothway(cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88));
        entity.setHinge_axis_perpendicularity_vertical(cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89));
        entity.setHinge_axis_perpendicularity_parallel(cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90));
        entity.setFrame_inter_wall_verticality1(cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91));
        entity.setFrame_inter_wall_verticality2(cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92));
        entity.setFrame_inter_wall_verticality3(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
        entity.setFrame_inter_wall_verticality4(cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94));
        entity.setLine_hammer_specifications(cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95));
        entity.setDoor_open_force1(cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96));
        entity.setDoor_close_force1(cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97));
        entity.setLock_control_force1(cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98));
        entity.setLock_control_forceNM1(cursor.isNull(offset + 99) ? null : cursor.getString(offset + 99));
        entity.setHandleLength(cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100));
        entity.setPerformance_of_door_fans_left(cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101));
        entity.setDoor_fan_ambient_noise_left(cursor.isNull(offset + 102) ? null : cursor.getString(offset + 102));
        entity.setDoor_leaf_noise_left(cursor.isNull(offset + 103) ? null : cursor.getString(offset + 103));
        entity.setPerformance_of_door_fans_right(cursor.isNull(offset + 104) ? null : cursor.getString(offset + 104));
        entity.setDoor_fan_ambient_noise_right(cursor.isNull(offset + 105) ? null : cursor.getString(offset + 105));
        entity.setDoor_leaf_noise_right(cursor.isNull(offset + 106) ? null : cursor.getString(offset + 106));
        entity.setClose_dangling_board_starting_force_top1(cursor.isNull(offset + 107) ? null : cursor.getString(offset + 107));
        entity.setSwing_plate_quality(cursor.isNull(offset + 108) ? null : cursor.getString(offset + 108));
        entity.setSwing_plate_hingeseat_quality(cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109));
        entity.setSwing_plate_closing_the_most_strongly_top1(cursor.isNull(offset + 110) ? null : cursor.getString(offset + 110));
        entity.setSwing_plate_biggest_gap_between_door_leaf_top1(cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111));
        entity.setDoor_frame_leaf_max_clearance1(cursor.isNull(offset + 112) ? null : cursor.getString(offset + 112));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(SampleCheck entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(SampleCheck entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(SampleCheck entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
