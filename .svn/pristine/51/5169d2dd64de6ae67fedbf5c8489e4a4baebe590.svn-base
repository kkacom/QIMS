package com.zhilian.rf_qims.util;

import com.colin.utils.StrKit;
import com.zhilian.rf_qims.entity.Company;
import com.zhilian.rf_qims.entity.Project;
import com.zhilian.rf_qims.entity.Sample;
import com.zhilian.rf_qims.entity.SampleCheck;

import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by Administrator on 2018/5/16.
 */

public class UploadParams {
    public static Map<String, String> getProjectParams(Project project, Company company) {
        Map<String, String> params = new HashMap<>();
        if (project.getStatus() == 0||project.getStatus()==2) {
            params.put("id", project.getId() + "");
        } else if (project.getStatus() == 1) {
            params.put("id", "0");
        }
        params.put("itemCode", StrKit.notBlank(project.getItemCode()) ? project.getItemCode() : "");
        params.put("projectNumber", StrKit.notBlank(project.getProjectCode()) ? project.getProjectCode() : "");
        params.put("entrustUnit", StrKit.notBlank(company.getName()) ? company.getName() : "");
        params.put("entrustUnitId", StrKit.notBlank(project.getEntrustId() + "") ? project.getEntrustId() + "" : "");
        params.put("itemName", StrKit.notBlank(project.getItemName()) ? project.getItemName() : "");
        params.put("projectAddress", StrKit.notBlank(project.getProjectAddr()) ? project.getProjectAddr() : "");
        params.put("areaId", StrKit.notBlank(project.getAreaId() + "") ? project.getAreaId() + "" : "");
        params.put("sampleSource", StrKit.notBlank(project.getSampleSource()) ? project.getSampleSource() : "1");
        params.put("entrustForm", StrKit.notBlank(project.getCommissionShape()) ? project.getCommissionShape() : "");
        params.put("entruster", StrKit.notBlank(project.getSender()) ? project.getSender() : "");
        params.put("entrusterPhone", StrKit.notBlank(project.getSenderPhone()) ? project.getSenderPhone() : "");
        params.put("entrustType", StrKit.notBlank(project.getCommissionCategory()) ? project.getCommissionCategory() : "");
        params.put("witnessUnit", StrKit.notBlank(project.getWitnessUnit()) ? project.getWitnessUnit() : "");
        params.put("witnessUnitPhone", StrKit.notBlank(project.getWitnessUnitPhone()) ? project.getWitnessUnitPhone() : "");
        params.put("witness", StrKit.notBlank(project.getWitness()) ? project.getWitness() : "");
        params.put("witnessPhone", StrKit.notBlank(project.getWitnessPhone()) ? project.getWitnessPhone() : "");
        params.put("supervisionUnit", StrKit.notBlank(project.getSupervisionUnit()) ? project.getSupervisionUnit() : "");
        params.put("supervisor", StrKit.notBlank(project.getSupervisor()) ? project.getSupervisor() : "");
        params.put("secrecy", StrKit.notBlank(project.getSecret()) ? project.getSecret() : "");
        params.put("remark", StrKit.notBlank(project.getDesc()) ? project.getDesc() : "");
        return params;
    }

    public static Map<String, String> getSampleParams(Sample sample,Company company) {
        Map<String, String> params = new HashMap<>();
        if (sample.getStatus() == 0||sample.getStatus()==2) {
            params.put("id", sample.getId() + "");
        } else if (sample.getStatus() == 1) {
            params.put("id", "0");
        }
        params.put("rid", sample.getPid() + "");
        params.put("number", StrKit.notBlank(sample.getSampleNo()) ?sample.getSampleNo():"");
        params.put("type", StrKit.notBlank(sample.getSampleType())? sample.getSampleType():"");
        params.put("smode", StrKit.notBlank(sample.getSampleModel())?sample.getSampleModel():"");
        params.put("eid",company.getId()+"");
//        params.put("unit", StrKit.notBlank(company.getName()) ?company.getName():"");
        params.put("projectName", StrKit.notBlank(sample.getAddr()) ?sample.getAddr():"");
        params.put("productionDate", StrKit.notBlank(sample.getMadeDate()) ?sample.getMadeDate():"");
        params.put("categoryCode", StrKit.notBlank(sample.getMadeNo()) ?sample.getMadeNo():"");
        params.put("testDate", StrKit.notBlank(sample.getCheckDate()) ?sample.getCheckDate():"");
        params.put("tester",StrKit.notBlank(sample.getTester())?sample.getTester():"");
        params.put("tester1",StrKit.notBlank(sample.getTester1())?sample.getTester1():"");

        params.put("door_frame_height", defaultString(sample.getDoor_frame_height()));
        params.put("door_frame_width", defaultString(sample.getDoor_frame_width()));

        params.put("door_leaf_width", defaultString(sample.getDoor_leaf_width()));
        params.put("door_leaf_height", defaultString(sample.getDoor_leaf_height()));
        params.put("door_leaf_thickness",defaultString(sample.getDoor_leaf_thickness()));
        params.put("battenHeight", defaultString(sample.getBattenHeight()));

        params.put("hangingPlateWidth", defaultString(sample.getHangingPlateWidth()));
        params.put("hangingPlateWidthCenter", defaultString(sample.getHangingPlateWidthCenter()));
        params.put("hangingPlateWidthBottom",defaultString(sample.getHangingPlateWidthBottom()));
        params.put("hangingPlateHeight",  defaultString(sample.getHangingPlateHeight()));
        params.put("hangingPlateHeightCenter",  defaultString(sample.getHangingPlateHeightCenter()));
        params.put("hangingPlateHeightBottom", defaultString(sample.getHangingPlateHeightBottom()));

        params.put("hingepageShaftDiameter",  defaultString(sample.getHingepageShaftDiameter()));
        params.put("hingepageHoleDiameter",  defaultString(sample.getHingepageHoleDiameter()));
        params.put("atresiaShaftDiameter",  defaultString(sample.getAtresiaShaftDiameter()));
        params.put("atresiaHoleDiameter",  defaultString(sample.getAtresiaHoleDiameter()));

        params.put("doorframeSteelThick", defaultString(sample.getDoorframeSteelThick()));
        params.put("steelPlatePositive",  defaultString(sample.getSteelPlatePositive()));
        params.put("steelPlateOpposite",  defaultString(sample.getSteelPlateOpposite()));

        params.put("legHeightAcross",  defaultString(sample.getLegHeightAcross()));

        params.put("strength",  defaultString(sample.getStrength()));

        params.put("steelbarProtectThick", defaultString(sample.getSteelbarProtectThick()));
        params.put("steelbarSpacing",  defaultString(sample.getSteelbarSpacing()));
        params.put("barDiameterDesignValue", defaultString(sample.getBarDiameterDesignValue()));

        params.put("doorLeafBaseVentWidth",  defaultString(sample.getDoorLeafBaseVentWidth()));
        params.put("doorLeafBaseVentHeight",  defaultString(sample.getDoorLeafBaseVentHeight()));
        params.put("hangingPlateThicknessTop",  defaultString(sample.getHangingPlateThicknessTop()));
        params.put("hangingPlateThicknessBottom",  defaultString(sample.getHangingPlateThicknessBottom()));
        params.put("steelPlantThickness",  defaultString(sample.getSteelPlantThickness()));

        params.put("equivalent_pipe_diameter",  defaultString(sample.getEquivalent_pipe_diameter()));

        return params;
    }

    public static Map<String, String> getSampleCheckParams(SampleCheck sampleCheck) {
        Map<String, String> params = toMap(sampleCheck);
        return params;
    }

    public static Map<String, String> toMap(Object javaBean) {
        Map<String, String> result = new HashMap<String, String>();
        Method[] methods = javaBean.getClass().getDeclaredMethods();

        for (Method method : methods) {
            try {
                if (method.getName().startsWith("get")) {
                    String field = method.getName();
                    field = field.substring(field.indexOf("get") + 3);
                    field = field.toLowerCase().charAt(0) + field.substring(1);

                    Object value = method.invoke(javaBean, (Object[]) null);
                    result.put(field, null == value ? "" : value.toString());
                }
            } catch (Exception e) {
            }
        }
        return result;
    }

    public static String defaultString(String value){
      return StrKit.notBlank(value)?value:"";
    }
}
